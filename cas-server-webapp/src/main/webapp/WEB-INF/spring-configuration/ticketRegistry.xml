<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License.  You may obtain a
    copy of the License at the following location:

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <description>
    	Configuration for the default TicketRegistry which stores the tickets in-memory and cleans them out as specified intervals.
    </description>
       
  <!-- Ticket Registry -->
  <bean id="ticketRegistry" class="org.jasig.cas.ticket.registry.DefaultTicketRegistry" />
	
	<!--Quartz -->
	<!-- TICKET REGISTRY CLEANER -->
	<bean id="ticketRegistryCleaner" class="org.jasig.cas.ticket.registry.support.DefaultTicketRegistryCleaner"
		p:ticketRegistry-ref="ticketRegistry"
		p:logoutManager-ref="logoutManager" />
	
	<bean id="jobDetailTicketRegistryCleaner" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"
		p:targetObject-ref="ticketRegistryCleaner"
		p:targetMethod="clean" />
	
	<bean id="triggerJobDetailTicketRegistryCleaner" class="org.springframework.scheduling.quartz.SimpleTriggerBean"
		p:jobDetail-ref="jobDetailTicketRegistryCleaner"
		p:startDelay="20000"
		p:repeatInterval="5000000" />

	<!-- example alternative configuration for storing tickets in MemcacheTicketRegistry
             See http://jasig.github.io/cas/4.0.x/installation/Memcached-Ticket-Registry.html for property details
             Make sure to disable the quartz ticket registry cleaner since memcached takes care of expiring tickets
             Use repcached patch if you want replication between several memcached instances

	<bean id="ticketRegistry" class="org.jasig.cas.ticket.registry.MemCacheTicketRegistry"
		c:client-ref="memcachedClient"
		c:ticketGrantingTicketTimeOut="${tgt.maxTimeToLiveInSeconds:28800}"
		c:serviceTicketTimeOut="${st.timeToKillInSeconds:7200}" />

	<bean id="memcachedClient" class="net.spy.memcached.spring.MemcachedClientFactoryBean"
		p:servers="localhost:11211"
		p:protocol="BINARY"
		p:locatorType="ARRAY_MOD"
		p:failureMode="Redistribute"
		p:transcoder-ref="kryoTranscoder">
		<property name="hashAlg">
			<value type="net.spy.memcached.DefaultHashAlgorithm">FNV1_64_HASH</value>
		</property>
	</bean>

	<bean id="kryoTranscoder" class="org.jasig.cas.ticket.registry.support.kryo.KryoTranscoder"
		init-method="initialize"
		c:initialBufferSize="8192" />
	-->
</beans>
