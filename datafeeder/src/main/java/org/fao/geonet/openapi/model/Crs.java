/*
 * GeoNetwork Api Documentation (beta)
 * Learn how to access the catalog using the GeoNetwork REST API.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.fao.geonet.openapi.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * Crs
 */

public class Crs {
    @JsonProperty("authority")
    private String authority = null;

    @JsonProperty("code")
    private String code = null;

    @JsonProperty("codeSpace")
    private String codeSpace = null;

    @JsonProperty("description")
    private String description = null;

    @JsonProperty("version")
    private String version = null;

    public Crs authority(String authority) {
        this.authority = authority;
        return this;
    }

    /**
     * Get authority
     * 
     * @return authority
     **/
    @ApiModelProperty(value = "")
    public String getAuthority() {
        return authority;
    }

    public void setAuthority(String authority) {
        this.authority = authority;
    }

    public Crs code(String code) {
        this.code = code;
        return this;
    }

    /**
     * Get code
     * 
     * @return code
     **/
    @ApiModelProperty(value = "")
    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public Crs codeSpace(String codeSpace) {
        this.codeSpace = codeSpace;
        return this;
    }

    /**
     * Get codeSpace
     * 
     * @return codeSpace
     **/
    @ApiModelProperty(value = "")
    public String getCodeSpace() {
        return codeSpace;
    }

    public void setCodeSpace(String codeSpace) {
        this.codeSpace = codeSpace;
    }

    public Crs description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     * 
     * @return description
     **/
    @ApiModelProperty(value = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Crs version(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get version
     * 
     * @return version
     **/
    @ApiModelProperty(value = "")
    public String getVersion() {
        return version;
    }

    public void setVersion(String version) {
        this.version = version;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Crs crs = (Crs) o;
        return Objects.equals(this.authority, crs.authority) && Objects.equals(this.code, crs.code)
                && Objects.equals(this.codeSpace, crs.codeSpace) && Objects.equals(this.description, crs.description)
                && Objects.equals(this.version, crs.version);
    }

    @Override
    public int hashCode() {
        return Objects.hash(authority, code, codeSpace, description, version);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Crs {\n");

        sb.append("    authority: ").append(toIndentedString(authority)).append("\n");
        sb.append("    code: ").append(toIndentedString(code)).append("\n");
        sb.append("    codeSpace: ").append(toIndentedString(codeSpace)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    version: ").append(toIndentedString(version)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
