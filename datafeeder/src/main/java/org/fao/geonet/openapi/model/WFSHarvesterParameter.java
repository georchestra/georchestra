/*
 * GeoNetwork Api Documentation (beta)
 * Learn how to access the catalog using the GeoNetwork REST API.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.fao.geonet.openapi.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * WFSHarvesterParameter
 */

public class WFSHarvesterParameter {
    @JsonProperty("crs")
    private String crs = null;

    @JsonProperty("encoding")
    private String encoding = null;

    @JsonProperty("maxFeatures")
    private Integer maxFeatures = null;

    @JsonProperty("metadataUuid")
    private String metadataUuid = null;

    @JsonProperty("timeOut")
    private Integer timeOut = null;

    @JsonProperty("titleExpression")
    private String titleExpression = null;

    @JsonProperty("tokenizedFields")
    private Map<String, String> tokenizedFields = null;

    @JsonProperty("treeFields")
    private List<String> treeFields = null;

    @JsonProperty("typeName")
    private String typeName = null;

    @JsonProperty("url")
    private String url = null;

    @JsonProperty("version")
    private String version = null;

    public WFSHarvesterParameter crs(String crs) {
        this.crs = crs;
        return this;
    }

    /**
     * Get crs
     * 
     * @return crs
     **/
    @ApiModelProperty(value = "")
    public String getCrs() {
        return crs;
    }

    public void setCrs(String crs) {
        this.crs = crs;
    }

    public WFSHarvesterParameter encoding(String encoding) {
        this.encoding = encoding;
        return this;
    }

    /**
     * Get encoding
     * 
     * @return encoding
     **/
    @ApiModelProperty(value = "")
    public String getEncoding() {
        return encoding;
    }

    public void setEncoding(String encoding) {
        this.encoding = encoding;
    }

    public WFSHarvesterParameter maxFeatures(Integer maxFeatures) {
        this.maxFeatures = maxFeatures;
        return this;
    }

    /**
     * Get maxFeatures
     * 
     * @return maxFeatures
     **/
    @ApiModelProperty(value = "")
    public Integer getMaxFeatures() {
        return maxFeatures;
    }

    public void setMaxFeatures(Integer maxFeatures) {
        this.maxFeatures = maxFeatures;
    }

    public WFSHarvesterParameter metadataUuid(String metadataUuid) {
        this.metadataUuid = metadataUuid;
        return this;
    }

    /**
     * Get metadataUuid
     * 
     * @return metadataUuid
     **/
    @ApiModelProperty(value = "")
    public String getMetadataUuid() {
        return metadataUuid;
    }

    public void setMetadataUuid(String metadataUuid) {
        this.metadataUuid = metadataUuid;
    }

    public WFSHarvesterParameter timeOut(Integer timeOut) {
        this.timeOut = timeOut;
        return this;
    }

    /**
     * Get timeOut
     * 
     * @return timeOut
     **/
    @ApiModelProperty(value = "")
    public Integer getTimeOut() {
        return timeOut;
    }

    public void setTimeOut(Integer timeOut) {
        this.timeOut = timeOut;
    }

    public WFSHarvesterParameter titleExpression(String titleExpression) {
        this.titleExpression = titleExpression;
        return this;
    }

    /**
     * Get titleExpression
     * 
     * @return titleExpression
     **/
    @ApiModelProperty(value = "")
    public String getTitleExpression() {
        return titleExpression;
    }

    public void setTitleExpression(String titleExpression) {
        this.titleExpression = titleExpression;
    }

    public WFSHarvesterParameter tokenizedFields(Map<String, String> tokenizedFields) {
        this.tokenizedFields = tokenizedFields;
        return this;
    }

    public WFSHarvesterParameter putTokenizedFieldsItem(String key, String tokenizedFieldsItem) {
        if (this.tokenizedFields == null) {
            this.tokenizedFields = new HashMap<>();
        }
        this.tokenizedFields.put(key, tokenizedFieldsItem);
        return this;
    }

    /**
     * Get tokenizedFields
     * 
     * @return tokenizedFields
     **/
    @ApiModelProperty(value = "")
    public Map<String, String> getTokenizedFields() {
        return tokenizedFields;
    }

    public void setTokenizedFields(Map<String, String> tokenizedFields) {
        this.tokenizedFields = tokenizedFields;
    }

    public WFSHarvesterParameter treeFields(List<String> treeFields) {
        this.treeFields = treeFields;
        return this;
    }

    public WFSHarvesterParameter addTreeFieldsItem(String treeFieldsItem) {
        if (this.treeFields == null) {
            this.treeFields = new ArrayList<>();
        }
        this.treeFields.add(treeFieldsItem);
        return this;
    }

    /**
     * Get treeFields
     * 
     * @return treeFields
     **/
    @ApiModelProperty(value = "")
    public List<String> getTreeFields() {
        return treeFields;
    }

    public void setTreeFields(List<String> treeFields) {
        this.treeFields = treeFields;
    }

    public WFSHarvesterParameter typeName(String typeName) {
        this.typeName = typeName;
        return this;
    }

    /**
     * Get typeName
     * 
     * @return typeName
     **/
    @ApiModelProperty(value = "")
    public String getTypeName() {
        return typeName;
    }

    public void setTypeName(String typeName) {
        this.typeName = typeName;
    }

    public WFSHarvesterParameter url(String url) {
        this.url = url;
        return this;
    }

    /**
     * Get url
     * 
     * @return url
     **/
    @ApiModelProperty(value = "")
    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    public WFSHarvesterParameter version(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get version
     * 
     * @return version
     **/
    @ApiModelProperty(value = "")
    public String getVersion() {
        return version;
    }

    public void setVersion(String version) {
        this.version = version;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        WFSHarvesterParameter wfSHarvesterParameter = (WFSHarvesterParameter) o;
        return Objects.equals(this.crs, wfSHarvesterParameter.crs)
                && Objects.equals(this.encoding, wfSHarvesterParameter.encoding)
                && Objects.equals(this.maxFeatures, wfSHarvesterParameter.maxFeatures)
                && Objects.equals(this.metadataUuid, wfSHarvesterParameter.metadataUuid)
                && Objects.equals(this.timeOut, wfSHarvesterParameter.timeOut)
                && Objects.equals(this.titleExpression, wfSHarvesterParameter.titleExpression)
                && Objects.equals(this.tokenizedFields, wfSHarvesterParameter.tokenizedFields)
                && Objects.equals(this.treeFields, wfSHarvesterParameter.treeFields)
                && Objects.equals(this.typeName, wfSHarvesterParameter.typeName)
                && Objects.equals(this.url, wfSHarvesterParameter.url)
                && Objects.equals(this.version, wfSHarvesterParameter.version);
    }

    @Override
    public int hashCode() {
        return Objects.hash(crs, encoding, maxFeatures, metadataUuid, timeOut, titleExpression, tokenizedFields,
                treeFields, typeName, url, version);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class WFSHarvesterParameter {\n");

        sb.append("    crs: ").append(toIndentedString(crs)).append("\n");
        sb.append("    encoding: ").append(toIndentedString(encoding)).append("\n");
        sb.append("    maxFeatures: ").append(toIndentedString(maxFeatures)).append("\n");
        sb.append("    metadataUuid: ").append(toIndentedString(metadataUuid)).append("\n");
        sb.append("    timeOut: ").append(toIndentedString(timeOut)).append("\n");
        sb.append("    titleExpression: ").append(toIndentedString(titleExpression)).append("\n");
        sb.append("    tokenizedFields: ").append(toIndentedString(tokenizedFields)).append("\n");
        sb.append("    treeFields: ").append(toIndentedString(treeFields)).append("\n");
        sb.append("    typeName: ").append(toIndentedString(typeName)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("    version: ").append(toIndentedString(version)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
