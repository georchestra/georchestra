/*
 * GeoNetwork Api Documentation (beta)
 * Learn how to access the catalog using the GeoNetwork REST API.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.fao.geonet.openapi.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * Service
 */

public class Service {
    @JsonProperty("className")
    private String className = null;

    @JsonProperty("description")
    private String description = null;

    @JsonProperty("explicitQuery")
    private String explicitQuery = null;

    @JsonProperty("id")
    private Integer id = null;

    @JsonProperty("name")
    private String name = null;

    @JsonProperty("parameters")
    private List<ServiceParam> parameters = null;

    public Service className(String className) {
        this.className = className;
        return this;
    }

    /**
     * Get className
     * 
     * @return className
     **/
    @ApiModelProperty(value = "")
    public String getClassName() {
        return className;
    }

    public void setClassName(String className) {
        this.className = className;
    }

    public Service description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     * 
     * @return description
     **/
    @ApiModelProperty(value = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Service explicitQuery(String explicitQuery) {
        this.explicitQuery = explicitQuery;
        return this;
    }

    /**
     * Get explicitQuery
     * 
     * @return explicitQuery
     **/
    @ApiModelProperty(value = "")
    public String getExplicitQuery() {
        return explicitQuery;
    }

    public void setExplicitQuery(String explicitQuery) {
        this.explicitQuery = explicitQuery;
    }

    public Service id(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     * 
     * @return id
     **/
    @ApiModelProperty(value = "")
    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Service name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     * 
     * @return name
     **/
    @ApiModelProperty(value = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Service parameters(List<ServiceParam> parameters) {
        this.parameters = parameters;
        return this;
    }

    public Service addParametersItem(ServiceParam parametersItem) {
        if (this.parameters == null) {
            this.parameters = new ArrayList<>();
        }
        this.parameters.add(parametersItem);
        return this;
    }

    /**
     * Get parameters
     * 
     * @return parameters
     **/
    @ApiModelProperty(value = "")
    public List<ServiceParam> getParameters() {
        return parameters;
    }

    public void setParameters(List<ServiceParam> parameters) {
        this.parameters = parameters;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Service service = (Service) o;
        return Objects.equals(this.className, service.className)
                && Objects.equals(this.description, service.description)
                && Objects.equals(this.explicitQuery, service.explicitQuery) && Objects.equals(this.id, service.id)
                && Objects.equals(this.name, service.name) && Objects.equals(this.parameters, service.parameters);
    }

    @Override
    public int hashCode() {
        return Objects.hash(className, description, explicitQuery, id, name, parameters);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Service {\n");

        sb.append("    className: ").append(toIndentedString(className)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    explicitQuery: ").append(toIndentedString(explicitQuery)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
