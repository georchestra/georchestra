/*
 * GeoNetwork Api Documentation (beta)
 * Learn how to access the catalog using the GeoNetwork REST API.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.fao.geonet.openapi.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * Group
 */

public class Group {
    @JsonProperty("allowedCategories")
    private List<MetadataCategory> allowedCategories = null;

    @JsonProperty("defaultCategory")
    private MetadataCategory defaultCategory = null;

    @JsonProperty("description")
    private String description = null;

    @JsonProperty("email")
    private String email = null;

    @JsonProperty("enableAllowedCategories")
    private Boolean enableAllowedCategories = null;

    @JsonProperty("id")
    private Integer id = null;

    @JsonProperty("label")
    private Map<String, String> label = null;

    @JsonProperty("logo")
    private String logo = null;

    @JsonProperty("name")
    private String name = null;

    @JsonProperty("referrer")
    private Integer referrer = null;

    @JsonProperty("reserved")
    private Boolean reserved = null;

    @JsonProperty("website")
    private String website = null;

    public Group allowedCategories(List<MetadataCategory> allowedCategories) {
        this.allowedCategories = allowedCategories;
        return this;
    }

    public Group addAllowedCategoriesItem(MetadataCategory allowedCategoriesItem) {
        if (this.allowedCategories == null) {
            this.allowedCategories = new ArrayList<>();
        }
        this.allowedCategories.add(allowedCategoriesItem);
        return this;
    }

    /**
     * Get allowedCategories
     * 
     * @return allowedCategories
     **/
    @ApiModelProperty(value = "")
    public List<MetadataCategory> getAllowedCategories() {
        return allowedCategories;
    }

    public void setAllowedCategories(List<MetadataCategory> allowedCategories) {
        this.allowedCategories = allowedCategories;
    }

    public Group defaultCategory(MetadataCategory defaultCategory) {
        this.defaultCategory = defaultCategory;
        return this;
    }

    /**
     * Get defaultCategory
     * 
     * @return defaultCategory
     **/
    @ApiModelProperty(value = "")
    public MetadataCategory getDefaultCategory() {
        return defaultCategory;
    }

    public void setDefaultCategory(MetadataCategory defaultCategory) {
        this.defaultCategory = defaultCategory;
    }

    public Group description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     * 
     * @return description
     **/
    @ApiModelProperty(value = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Group email(String email) {
        this.email = email;
        return this;
    }

    /**
     * Get email
     * 
     * @return email
     **/
    @ApiModelProperty(value = "")
    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public Group enableAllowedCategories(Boolean enableAllowedCategories) {
        this.enableAllowedCategories = enableAllowedCategories;
        return this;
    }

    /**
     * Get enableAllowedCategories
     * 
     * @return enableAllowedCategories
     **/
    @ApiModelProperty(value = "")
    public Boolean isEnableAllowedCategories() {
        return enableAllowedCategories;
    }

    public void setEnableAllowedCategories(Boolean enableAllowedCategories) {
        this.enableAllowedCategories = enableAllowedCategories;
    }

    public Group id(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     * 
     * @return id
     **/
    @ApiModelProperty(value = "")
    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Group label(Map<String, String> label) {
        this.label = label;
        return this;
    }

    public Group putLabelItem(String key, String labelItem) {
        if (this.label == null) {
            this.label = new HashMap<>();
        }
        this.label.put(key, labelItem);
        return this;
    }

    /**
     * Get label
     * 
     * @return label
     **/
    @ApiModelProperty(value = "")
    public Map<String, String> getLabel() {
        return label;
    }

    public void setLabel(Map<String, String> label) {
        this.label = label;
    }

    public Group logo(String logo) {
        this.logo = logo;
        return this;
    }

    /**
     * Get logo
     * 
     * @return logo
     **/
    @ApiModelProperty(value = "")
    public String getLogo() {
        return logo;
    }

    public void setLogo(String logo) {
        this.logo = logo;
    }

    public Group name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     * 
     * @return name
     **/
    @ApiModelProperty(value = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Group referrer(Integer referrer) {
        this.referrer = referrer;
        return this;
    }

    /**
     * Get referrer
     * 
     * @return referrer
     **/
    @ApiModelProperty(value = "")
    public Integer getReferrer() {
        return referrer;
    }

    public void setReferrer(Integer referrer) {
        this.referrer = referrer;
    }

    public Group reserved(Boolean reserved) {
        this.reserved = reserved;
        return this;
    }

    /**
     * Get reserved
     * 
     * @return reserved
     **/
    @ApiModelProperty(value = "")
    public Boolean isReserved() {
        return reserved;
    }

    public void setReserved(Boolean reserved) {
        this.reserved = reserved;
    }

    public Group website(String website) {
        this.website = website;
        return this;
    }

    /**
     * Get website
     * 
     * @return website
     **/
    @ApiModelProperty(value = "")
    public String getWebsite() {
        return website;
    }

    public void setWebsite(String website) {
        this.website = website;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Group group = (Group) o;
        return Objects.equals(this.allowedCategories, group.allowedCategories)
                && Objects.equals(this.defaultCategory, group.defaultCategory)
                && Objects.equals(this.description, group.description) && Objects.equals(this.email, group.email)
                && Objects.equals(this.enableAllowedCategories, group.enableAllowedCategories)
                && Objects.equals(this.id, group.id) && Objects.equals(this.label, group.label)
                && Objects.equals(this.logo, group.logo) && Objects.equals(this.name, group.name)
                && Objects.equals(this.referrer, group.referrer) && Objects.equals(this.reserved, group.reserved)
                && Objects.equals(this.website, group.website);
    }

    @Override
    public int hashCode() {
        return Objects.hash(allowedCategories, defaultCategory, description, email, enableAllowedCategories, id, label,
                logo, name, referrer, reserved, website);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Group {\n");

        sb.append("    allowedCategories: ").append(toIndentedString(allowedCategories)).append("\n");
        sb.append("    defaultCategory: ").append(toIndentedString(defaultCategory)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    email: ").append(toIndentedString(email)).append("\n");
        sb.append("    enableAllowedCategories: ").append(toIndentedString(enableAllowedCategories)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    label: ").append(toIndentedString(label)).append("\n");
        sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    referrer: ").append(toIndentedString(referrer)).append("\n");
        sb.append("    reserved: ").append(toIndentedString(reserved)).append("\n");
        sb.append("    website: ").append(toIndentedString(website)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
