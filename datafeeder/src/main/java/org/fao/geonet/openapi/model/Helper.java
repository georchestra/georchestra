/*
 * GeoNetwork Api Documentation (beta)
 * Learn how to access the catalog using the GeoNetwork REST API.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.fao.geonet.openapi.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * Helper
 */

public class Helper {
    @JsonProperty("displayIf")
    private String displayIf = null;

    @JsonProperty("editorMode")
    private String editorMode = null;

    @JsonProperty("option")
    private List<Option> option = null;

    @JsonProperty("rel")
    private String rel = null;

    @JsonProperty("relAtt")
    private String relAtt = null;

    @JsonProperty("sort")
    private Boolean sort = null;

    public Helper displayIf(String displayIf) {
        this.displayIf = displayIf;
        return this;
    }

    /**
     * Get displayIf
     * 
     * @return displayIf
     **/
    @ApiModelProperty(value = "")
    public String getDisplayIf() {
        return displayIf;
    }

    public void setDisplayIf(String displayIf) {
        this.displayIf = displayIf;
    }

    public Helper editorMode(String editorMode) {
        this.editorMode = editorMode;
        return this;
    }

    /**
     * Get editorMode
     * 
     * @return editorMode
     **/
    @ApiModelProperty(value = "")
    public String getEditorMode() {
        return editorMode;
    }

    public void setEditorMode(String editorMode) {
        this.editorMode = editorMode;
    }

    public Helper option(List<Option> option) {
        this.option = option;
        return this;
    }

    public Helper addOptionItem(Option optionItem) {
        if (this.option == null) {
            this.option = new ArrayList<>();
        }
        this.option.add(optionItem);
        return this;
    }

    /**
     * Get option
     * 
     * @return option
     **/
    @ApiModelProperty(value = "")
    public List<Option> getOption() {
        return option;
    }

    public void setOption(List<Option> option) {
        this.option = option;
    }

    public Helper rel(String rel) {
        this.rel = rel;
        return this;
    }

    /**
     * Get rel
     * 
     * @return rel
     **/
    @ApiModelProperty(value = "")
    public String getRel() {
        return rel;
    }

    public void setRel(String rel) {
        this.rel = rel;
    }

    public Helper relAtt(String relAtt) {
        this.relAtt = relAtt;
        return this;
    }

    /**
     * Get relAtt
     * 
     * @return relAtt
     **/
    @ApiModelProperty(value = "")
    public String getRelAtt() {
        return relAtt;
    }

    public void setRelAtt(String relAtt) {
        this.relAtt = relAtt;
    }

    public Helper sort(Boolean sort) {
        this.sort = sort;
        return this;
    }

    /**
     * Get sort
     * 
     * @return sort
     **/
    @ApiModelProperty(value = "")
    public Boolean isSort() {
        return sort;
    }

    public void setSort(Boolean sort) {
        this.sort = sort;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Helper helper = (Helper) o;
        return Objects.equals(this.displayIf, helper.displayIf) && Objects.equals(this.editorMode, helper.editorMode)
                && Objects.equals(this.option, helper.option) && Objects.equals(this.rel, helper.rel)
                && Objects.equals(this.relAtt, helper.relAtt) && Objects.equals(this.sort, helper.sort);
    }

    @Override
    public int hashCode() {
        return Objects.hash(displayIf, editorMode, option, rel, relAtt, sort);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Helper {\n");

        sb.append("    displayIf: ").append(toIndentedString(displayIf)).append("\n");
        sb.append("    editorMode: ").append(toIndentedString(editorMode)).append("\n");
        sb.append("    option: ").append(toIndentedString(option)).append("\n");
        sb.append("    rel: ").append(toIndentedString(rel)).append("\n");
        sb.append("    relAtt: ").append(toIndentedString(relAtt)).append("\n");
        sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
