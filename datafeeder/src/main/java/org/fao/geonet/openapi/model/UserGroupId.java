/*
 * GeoNetwork Api Documentation (beta)
 * Learn how to access the catalog using the GeoNetwork REST API.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.fao.geonet.openapi.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * UserGroupId
 */

public class UserGroupId {
    @JsonProperty("groupId")
    private Integer groupId = null;

    /**
     * Gets or Sets profile
     */
    public enum ProfileEnum {
        ADMINISTRATOR("Administrator"),

        USERADMIN("UserAdmin"),

        REVIEWER("Reviewer"),

        EDITOR("Editor"),

        REGISTEREDUSER("RegisteredUser"),

        GUEST("Guest"),

        MONITOR("Monitor");

        private String value;

        ProfileEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static ProfileEnum fromValue(String text) {
            for (ProfileEnum b : ProfileEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }
    }

    @JsonProperty("profile")
    private ProfileEnum profile = null;

    @JsonProperty("userId")
    private Integer userId = null;

    public UserGroupId groupId(Integer groupId) {
        this.groupId = groupId;
        return this;
    }

    /**
     * Get groupId
     * 
     * @return groupId
     **/
    @ApiModelProperty(value = "")
    public Integer getGroupId() {
        return groupId;
    }

    public void setGroupId(Integer groupId) {
        this.groupId = groupId;
    }

    public UserGroupId profile(ProfileEnum profile) {
        this.profile = profile;
        return this;
    }

    /**
     * Get profile
     * 
     * @return profile
     **/
    @ApiModelProperty(value = "")
    public ProfileEnum getProfile() {
        return profile;
    }

    public void setProfile(ProfileEnum profile) {
        this.profile = profile;
    }

    public UserGroupId userId(Integer userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Get userId
     * 
     * @return userId
     **/
    @ApiModelProperty(value = "")
    public Integer getUserId() {
        return userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UserGroupId userGroupId = (UserGroupId) o;
        return Objects.equals(this.groupId, userGroupId.groupId) && Objects.equals(this.profile, userGroupId.profile)
                && Objects.equals(this.userId, userGroupId.userId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(groupId, profile, userId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UserGroupId {\n");

        sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
        sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
        sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
