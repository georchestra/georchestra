/*
 * GeoNetwork Api Documentation (beta)
 * Learn how to access the catalog using the GeoNetwork REST API.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.fao.geonet.openapi.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * User
 */

public class User {
    @JsonProperty("accountNonExpired")
    private Boolean accountNonExpired = null;

    @JsonProperty("accountNonLocked")
    private Boolean accountNonLocked = null;

    @JsonProperty("addresses")
    private List<Address> addresses = null;

    @JsonProperty("authorities")
    private List<GrantedAuthority> authorities = null;

    @JsonProperty("credentialsNonExpired")
    private Boolean credentialsNonExpired = null;

    @JsonProperty("email")
    private String email = null;

    @JsonProperty("emailAddresses")
    private List<String> emailAddresses = null;

    @JsonProperty("enabled")
    private Boolean enabled = null;

    @JsonProperty("id")
    private Integer id = null;

    @JsonProperty("kind")
    private String kind = null;

    @JsonProperty("lastLoginDate")
    private String lastLoginDate = null;

    @JsonProperty("name")
    private String name = null;

    @JsonProperty("organisation")
    private String organisation = null;

    @JsonProperty("primaryAddress")
    private Address primaryAddress = null;

    /**
     * Gets or Sets profile
     */
    public enum ProfileEnum {
        ADMINISTRATOR("Administrator"),

        USERADMIN("UserAdmin"),

        REVIEWER("Reviewer"),

        EDITOR("Editor"),

        REGISTEREDUSER("RegisteredUser"),

        GUEST("Guest"),

        MONITOR("Monitor");

        private String value;

        ProfileEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static ProfileEnum fromValue(String text) {
            for (ProfileEnum b : ProfileEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }
    }

    @JsonProperty("profile")
    private ProfileEnum profile = null;

    @JsonProperty("security")
    private Object security = null;

    @JsonProperty("surname")
    private String surname = null;

    @JsonProperty("username")
    private String username = null;

    public User accountNonExpired(Boolean accountNonExpired) {
        this.accountNonExpired = accountNonExpired;
        return this;
    }

    /**
     * Get accountNonExpired
     * 
     * @return accountNonExpired
     **/
    @ApiModelProperty(value = "")
    public Boolean isAccountNonExpired() {
        return accountNonExpired;
    }

    public void setAccountNonExpired(Boolean accountNonExpired) {
        this.accountNonExpired = accountNonExpired;
    }

    public User accountNonLocked(Boolean accountNonLocked) {
        this.accountNonLocked = accountNonLocked;
        return this;
    }

    /**
     * Get accountNonLocked
     * 
     * @return accountNonLocked
     **/
    @ApiModelProperty(value = "")
    public Boolean isAccountNonLocked() {
        return accountNonLocked;
    }

    public void setAccountNonLocked(Boolean accountNonLocked) {
        this.accountNonLocked = accountNonLocked;
    }

    public User addresses(List<Address> addresses) {
        this.addresses = addresses;
        return this;
    }

    public User addAddressesItem(Address addressesItem) {
        if (this.addresses == null) {
            this.addresses = new ArrayList<>();
        }
        this.addresses.add(addressesItem);
        return this;
    }

    /**
     * Get addresses
     * 
     * @return addresses
     **/
    @ApiModelProperty(value = "")
    public List<Address> getAddresses() {
        return addresses;
    }

    public void setAddresses(List<Address> addresses) {
        this.addresses = addresses;
    }

    public User authorities(List<GrantedAuthority> authorities) {
        this.authorities = authorities;
        return this;
    }

    public User addAuthoritiesItem(GrantedAuthority authoritiesItem) {
        if (this.authorities == null) {
            this.authorities = new ArrayList<>();
        }
        this.authorities.add(authoritiesItem);
        return this;
    }

    /**
     * Get authorities
     * 
     * @return authorities
     **/
    @ApiModelProperty(value = "")
    public List<GrantedAuthority> getAuthorities() {
        return authorities;
    }

    public void setAuthorities(List<GrantedAuthority> authorities) {
        this.authorities = authorities;
    }

    public User credentialsNonExpired(Boolean credentialsNonExpired) {
        this.credentialsNonExpired = credentialsNonExpired;
        return this;
    }

    /**
     * Get credentialsNonExpired
     * 
     * @return credentialsNonExpired
     **/
    @ApiModelProperty(value = "")
    public Boolean isCredentialsNonExpired() {
        return credentialsNonExpired;
    }

    public void setCredentialsNonExpired(Boolean credentialsNonExpired) {
        this.credentialsNonExpired = credentialsNonExpired;
    }

    public User email(String email) {
        this.email = email;
        return this;
    }

    /**
     * Get email
     * 
     * @return email
     **/
    @ApiModelProperty(value = "")
    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public User emailAddresses(List<String> emailAddresses) {
        this.emailAddresses = emailAddresses;
        return this;
    }

    public User addEmailAddressesItem(String emailAddressesItem) {
        if (this.emailAddresses == null) {
            this.emailAddresses = new ArrayList<>();
        }
        this.emailAddresses.add(emailAddressesItem);
        return this;
    }

    /**
     * Get emailAddresses
     * 
     * @return emailAddresses
     **/
    @ApiModelProperty(value = "")
    public List<String> getEmailAddresses() {
        return emailAddresses;
    }

    public void setEmailAddresses(List<String> emailAddresses) {
        this.emailAddresses = emailAddresses;
    }

    public User enabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get enabled
     * 
     * @return enabled
     **/
    @ApiModelProperty(value = "")
    public Boolean isEnabled() {
        return enabled;
    }

    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    public User id(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     * 
     * @return id
     **/
    @ApiModelProperty(value = "")
    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public User kind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get kind
     * 
     * @return kind
     **/
    @ApiModelProperty(value = "")
    public String getKind() {
        return kind;
    }

    public void setKind(String kind) {
        this.kind = kind;
    }

    public User lastLoginDate(String lastLoginDate) {
        this.lastLoginDate = lastLoginDate;
        return this;
    }

    /**
     * Get lastLoginDate
     * 
     * @return lastLoginDate
     **/
    @ApiModelProperty(value = "")
    public String getLastLoginDate() {
        return lastLoginDate;
    }

    public void setLastLoginDate(String lastLoginDate) {
        this.lastLoginDate = lastLoginDate;
    }

    public User name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     * 
     * @return name
     **/
    @ApiModelProperty(value = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public User organisation(String organisation) {
        this.organisation = organisation;
        return this;
    }

    /**
     * Get organisation
     * 
     * @return organisation
     **/
    @ApiModelProperty(value = "")
    public String getOrganisation() {
        return organisation;
    }

    public void setOrganisation(String organisation) {
        this.organisation = organisation;
    }

    public User primaryAddress(Address primaryAddress) {
        this.primaryAddress = primaryAddress;
        return this;
    }

    /**
     * Get primaryAddress
     * 
     * @return primaryAddress
     **/
    @ApiModelProperty(value = "")
    public Address getPrimaryAddress() {
        return primaryAddress;
    }

    public void setPrimaryAddress(Address primaryAddress) {
        this.primaryAddress = primaryAddress;
    }

    public User profile(ProfileEnum profile) {
        this.profile = profile;
        return this;
    }

    /**
     * Get profile
     * 
     * @return profile
     **/
    @ApiModelProperty(value = "")
    public ProfileEnum getProfile() {
        return profile;
    }

    public void setProfile(ProfileEnum profile) {
        this.profile = profile;
    }

    public User security(Object security) {
        this.security = security;
        return this;
    }

    /**
     * Get security
     * 
     * @return security
     **/
    @ApiModelProperty(value = "")
    public Object getSecurity() {
        return security;
    }

    public void setSecurity(Object security) {
        this.security = security;
    }

    public User surname(String surname) {
        this.surname = surname;
        return this;
    }

    /**
     * Get surname
     * 
     * @return surname
     **/
    @ApiModelProperty(value = "")
    public String getSurname() {
        return surname;
    }

    public void setSurname(String surname) {
        this.surname = surname;
    }

    public User username(String username) {
        this.username = username;
        return this;
    }

    /**
     * Get username
     * 
     * @return username
     **/
    @ApiModelProperty(value = "")
    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        User user = (User) o;
        return Objects.equals(this.accountNonExpired, user.accountNonExpired)
                && Objects.equals(this.accountNonLocked, user.accountNonLocked)
                && Objects.equals(this.addresses, user.addresses) && Objects.equals(this.authorities, user.authorities)
                && Objects.equals(this.credentialsNonExpired, user.credentialsNonExpired)
                && Objects.equals(this.email, user.email) && Objects.equals(this.emailAddresses, user.emailAddresses)
                && Objects.equals(this.enabled, user.enabled) && Objects.equals(this.id, user.id)
                && Objects.equals(this.kind, user.kind) && Objects.equals(this.lastLoginDate, user.lastLoginDate)
                && Objects.equals(this.name, user.name) && Objects.equals(this.organisation, user.organisation)
                && Objects.equals(this.primaryAddress, user.primaryAddress)
                && Objects.equals(this.profile, user.profile) && Objects.equals(this.security, user.security)
                && Objects.equals(this.surname, user.surname) && Objects.equals(this.username, user.username);
    }

    @Override
    public int hashCode() {
        return Objects.hash(accountNonExpired, accountNonLocked, addresses, authorities, credentialsNonExpired, email,
                emailAddresses, enabled, id, kind, lastLoginDate, name, organisation, primaryAddress, profile, security,
                surname, username);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class User {\n");

        sb.append("    accountNonExpired: ").append(toIndentedString(accountNonExpired)).append("\n");
        sb.append("    accountNonLocked: ").append(toIndentedString(accountNonLocked)).append("\n");
        sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
        sb.append("    authorities: ").append(toIndentedString(authorities)).append("\n");
        sb.append("    credentialsNonExpired: ").append(toIndentedString(credentialsNonExpired)).append("\n");
        sb.append("    email: ").append(toIndentedString(email)).append("\n");
        sb.append("    emailAddresses: ").append(toIndentedString(emailAddresses)).append("\n");
        sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
        sb.append("    lastLoginDate: ").append(toIndentedString(lastLoginDate)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    organisation: ").append(toIndentedString(organisation)).append("\n");
        sb.append("    primaryAddress: ").append(toIndentedString(primaryAddress)).append("\n");
        sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
        sb.append("    security: ").append(toIndentedString(security)).append("\n");
        sb.append("    surname: ").append(toIndentedString(surname)).append("\n");
        sb.append("    username: ").append(toIndentedString(username)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
