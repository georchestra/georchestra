/*
 * GeoNetwork Api Documentation (beta)
 * Learn how to access the catalog using the GeoNetwork REST API.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.fao.geonet.openapi.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * FileSystemResource
 */

public class FileSystemResource {
    @JsonProperty("description")
    private String description = null;

    @JsonProperty("file")
    private java.io.File file = null;

    @JsonProperty("filename")
    private String filename = null;

    @JsonProperty("inputStream")
    private InputStream inputStream = null;

    @JsonProperty("open")
    private Boolean open = null;

    @JsonProperty("outputStream")
    private OutputStream outputStream = null;

    @JsonProperty("path")
    private String path = null;

    @JsonProperty("readable")
    private Boolean readable = null;

    @JsonProperty("uri")
    private URI uri = null;

    @JsonProperty("url")
    private URL url = null;

    @JsonProperty("writable")
    private Boolean writable = null;

    public FileSystemResource description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     * 
     * @return description
     **/
    @ApiModelProperty(value = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public FileSystemResource file(java.io.File file) {
        this.file = file;
        return this;
    }

    /**
     * Get file
     * 
     * @return file
     **/
    @ApiModelProperty(value = "")
    public java.io.File getFile() {
        return file;
    }

    public void setFile(java.io.File file) {
        this.file = file;
    }

    public FileSystemResource filename(String filename) {
        this.filename = filename;
        return this;
    }

    /**
     * Get filename
     * 
     * @return filename
     **/
    @ApiModelProperty(value = "")
    public String getFilename() {
        return filename;
    }

    public void setFilename(String filename) {
        this.filename = filename;
    }

    public FileSystemResource inputStream(InputStream inputStream) {
        this.inputStream = inputStream;
        return this;
    }

    /**
     * Get inputStream
     * 
     * @return inputStream
     **/
    @ApiModelProperty(value = "")
    public InputStream getInputStream() {
        return inputStream;
    }

    public void setInputStream(InputStream inputStream) {
        this.inputStream = inputStream;
    }

    public FileSystemResource open(Boolean open) {
        this.open = open;
        return this;
    }

    /**
     * Get open
     * 
     * @return open
     **/
    @ApiModelProperty(value = "")
    public Boolean isOpen() {
        return open;
    }

    public void setOpen(Boolean open) {
        this.open = open;
    }

    public FileSystemResource outputStream(OutputStream outputStream) {
        this.outputStream = outputStream;
        return this;
    }

    /**
     * Get outputStream
     * 
     * @return outputStream
     **/
    @ApiModelProperty(value = "")
    public OutputStream getOutputStream() {
        return outputStream;
    }

    public void setOutputStream(OutputStream outputStream) {
        this.outputStream = outputStream;
    }

    public FileSystemResource path(String path) {
        this.path = path;
        return this;
    }

    /**
     * Get path
     * 
     * @return path
     **/
    @ApiModelProperty(value = "")
    public String getPath() {
        return path;
    }

    public void setPath(String path) {
        this.path = path;
    }

    public FileSystemResource readable(Boolean readable) {
        this.readable = readable;
        return this;
    }

    /**
     * Get readable
     * 
     * @return readable
     **/
    @ApiModelProperty(value = "")
    public Boolean isReadable() {
        return readable;
    }

    public void setReadable(Boolean readable) {
        this.readable = readable;
    }

    public FileSystemResource uri(URI uri) {
        this.uri = uri;
        return this;
    }

    /**
     * Get uri
     * 
     * @return uri
     **/
    @ApiModelProperty(value = "")
    public URI getUri() {
        return uri;
    }

    public void setUri(URI uri) {
        this.uri = uri;
    }

    public FileSystemResource url(URL url) {
        this.url = url;
        return this;
    }

    /**
     * Get url
     * 
     * @return url
     **/
    @ApiModelProperty(value = "")
    public URL getUrl() {
        return url;
    }

    public void setUrl(URL url) {
        this.url = url;
    }

    public FileSystemResource writable(Boolean writable) {
        this.writable = writable;
        return this;
    }

    /**
     * Get writable
     * 
     * @return writable
     **/
    @ApiModelProperty(value = "")
    public Boolean isWritable() {
        return writable;
    }

    public void setWritable(Boolean writable) {
        this.writable = writable;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FileSystemResource fileSystemResource = (FileSystemResource) o;
        return Objects.equals(this.description, fileSystemResource.description)
                && Objects.equals(this.file, fileSystemResource.file)
                && Objects.equals(this.filename, fileSystemResource.filename)
                && Objects.equals(this.inputStream, fileSystemResource.inputStream)
                && Objects.equals(this.open, fileSystemResource.open)
                && Objects.equals(this.outputStream, fileSystemResource.outputStream)
                && Objects.equals(this.path, fileSystemResource.path)
                && Objects.equals(this.readable, fileSystemResource.readable)
                && Objects.equals(this.uri, fileSystemResource.uri) && Objects.equals(this.url, fileSystemResource.url)
                && Objects.equals(this.writable, fileSystemResource.writable);
    }

    @Override
    public int hashCode() {
        return Objects.hash(description, file, filename, inputStream, open, outputStream, path, readable, uri, url,
                writable);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class FileSystemResource {\n");

        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    file: ").append(toIndentedString(file)).append("\n");
        sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
        sb.append("    inputStream: ").append(toIndentedString(inputStream)).append("\n");
        sb.append("    open: ").append(toIndentedString(open)).append("\n");
        sb.append("    outputStream: ").append(toIndentedString(outputStream)).append("\n");
        sb.append("    path: ").append(toIndentedString(path)).append("\n");
        sb.append("    readable: ").append(toIndentedString(readable)).append("\n");
        sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("    writable: ").append(toIndentedString(writable)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
