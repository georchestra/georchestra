/*
 * GeoNetwork Api Documentation (beta)
 * Learn how to access the catalog using the GeoNetwork REST API.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.fao.geonet.openapi.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * IProcessingReport
 */

public class IProcessingReport {
    @JsonProperty("ellapsedTimeInSeconds")
    private Long ellapsedTimeInSeconds = null;

    @JsonProperty("endIsoDateTime")
    private String endIsoDateTime = null;

    @JsonProperty("running")
    private Boolean running = null;

    @JsonProperty("startIsoDateTime")
    private String startIsoDateTime = null;

    @JsonProperty("totalTimeInSeconds")
    private Long totalTimeInSeconds = null;

    @JsonProperty("type")
    private String type = null;

    @JsonProperty("uuid")
    private String uuid = null;

    public IProcessingReport ellapsedTimeInSeconds(Long ellapsedTimeInSeconds) {
        this.ellapsedTimeInSeconds = ellapsedTimeInSeconds;
        return this;
    }

    /**
     * Get ellapsedTimeInSeconds
     * 
     * @return ellapsedTimeInSeconds
     **/
    @ApiModelProperty(value = "")
    public Long getEllapsedTimeInSeconds() {
        return ellapsedTimeInSeconds;
    }

    public void setEllapsedTimeInSeconds(Long ellapsedTimeInSeconds) {
        this.ellapsedTimeInSeconds = ellapsedTimeInSeconds;
    }

    public IProcessingReport endIsoDateTime(String endIsoDateTime) {
        this.endIsoDateTime = endIsoDateTime;
        return this;
    }

    /**
     * Get endIsoDateTime
     * 
     * @return endIsoDateTime
     **/
    @ApiModelProperty(value = "")
    public String getEndIsoDateTime() {
        return endIsoDateTime;
    }

    public void setEndIsoDateTime(String endIsoDateTime) {
        this.endIsoDateTime = endIsoDateTime;
    }

    public IProcessingReport running(Boolean running) {
        this.running = running;
        return this;
    }

    /**
     * Get running
     * 
     * @return running
     **/
    @ApiModelProperty(value = "")
    public Boolean isRunning() {
        return running;
    }

    public void setRunning(Boolean running) {
        this.running = running;
    }

    public IProcessingReport startIsoDateTime(String startIsoDateTime) {
        this.startIsoDateTime = startIsoDateTime;
        return this;
    }

    /**
     * Get startIsoDateTime
     * 
     * @return startIsoDateTime
     **/
    @ApiModelProperty(value = "")
    public String getStartIsoDateTime() {
        return startIsoDateTime;
    }

    public void setStartIsoDateTime(String startIsoDateTime) {
        this.startIsoDateTime = startIsoDateTime;
    }

    public IProcessingReport totalTimeInSeconds(Long totalTimeInSeconds) {
        this.totalTimeInSeconds = totalTimeInSeconds;
        return this;
    }

    /**
     * Get totalTimeInSeconds
     * 
     * @return totalTimeInSeconds
     **/
    @ApiModelProperty(value = "")
    public Long getTotalTimeInSeconds() {
        return totalTimeInSeconds;
    }

    public void setTotalTimeInSeconds(Long totalTimeInSeconds) {
        this.totalTimeInSeconds = totalTimeInSeconds;
    }

    public IProcessingReport type(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     * 
     * @return type
     **/
    @ApiModelProperty(value = "")
    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public IProcessingReport uuid(String uuid) {
        this.uuid = uuid;
        return this;
    }

    /**
     * Get uuid
     * 
     * @return uuid
     **/
    @ApiModelProperty(value = "")
    public String getUuid() {
        return uuid;
    }

    public void setUuid(String uuid) {
        this.uuid = uuid;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        IProcessingReport iprocessingReport = (IProcessingReport) o;
        return Objects.equals(this.ellapsedTimeInSeconds, iprocessingReport.ellapsedTimeInSeconds)
                && Objects.equals(this.endIsoDateTime, iprocessingReport.endIsoDateTime)
                && Objects.equals(this.running, iprocessingReport.running)
                && Objects.equals(this.startIsoDateTime, iprocessingReport.startIsoDateTime)
                && Objects.equals(this.totalTimeInSeconds, iprocessingReport.totalTimeInSeconds)
                && Objects.equals(this.type, iprocessingReport.type)
                && Objects.equals(this.uuid, iprocessingReport.uuid);
    }

    @Override
    public int hashCode() {
        return Objects.hash(ellapsedTimeInSeconds, endIsoDateTime, running, startIsoDateTime, totalTimeInSeconds, type,
                uuid);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class IProcessingReport {\n");

        sb.append("    ellapsedTimeInSeconds: ").append(toIndentedString(ellapsedTimeInSeconds)).append("\n");
        sb.append("    endIsoDateTime: ").append(toIndentedString(endIsoDateTime)).append("\n");
        sb.append("    running: ").append(toIndentedString(running)).append("\n");
        sb.append("    startIsoDateTime: ").append(toIndentedString(startIsoDateTime)).append("\n");
        sb.append("    totalTimeInSeconds: ").append(toIndentedString(totalTimeInSeconds)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
