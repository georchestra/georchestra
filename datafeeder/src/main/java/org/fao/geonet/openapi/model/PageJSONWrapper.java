/*
 * GeoNetwork Api Documentation (beta)
 * Learn how to access the catalog using the GeoNetwork REST API.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.fao.geonet.openapi.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * PageJSONWrapper
 */

public class PageJSONWrapper {
    /**
     * Gets or Sets format
     */
    public enum FormatEnum {
        LINK("LINK"),

        HTML("HTML"),

        TEXT("TEXT"),

        MARKDOWN("MARKDOWN"),

        WIKI("WIKI");

        private String value;

        FormatEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static FormatEnum fromValue(String text) {
            for (FormatEnum b : FormatEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }
    }

    @JsonProperty("format")
    private FormatEnum format = null;

    @JsonProperty("language")
    private String language = null;

    @JsonProperty("link")
    private String link = null;

    @JsonProperty("linkText")
    private String linkText = null;

    /**
     * Gets or Sets sections
     */
    public enum SectionsEnum {
        ALL("ALL"),

        TOP("TOP"),

        FOOTER("FOOTER"),

        MENU("MENU"),

        SUBMENU("SUBMENU"),

        CUSTOM_MENU1("CUSTOM_MENU1"),

        CUSTOM_MENU2("CUSTOM_MENU2"),

        CUSTOM_MENU3("CUSTOM_MENU3"),

        DRAFT("DRAFT");

        private String value;

        SectionsEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static SectionsEnum fromValue(String text) {
            for (SectionsEnum b : SectionsEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }
    }

    @JsonProperty("sections")
    private List<SectionsEnum> sections = null;

    /**
     * Gets or Sets status
     */
    public enum StatusEnum {
        PUBLIC("PUBLIC"),

        PUBLIC_ONLY("PUBLIC_ONLY"),

        PRIVATE("PRIVATE"),

        HIDDEN("HIDDEN");

        private String value;

        StatusEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static StatusEnum fromValue(String text) {
            for (StatusEnum b : StatusEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }
    }

    @JsonProperty("status")
    private StatusEnum status = null;

    public PageJSONWrapper format(FormatEnum format) {
        this.format = format;
        return this;
    }

    /**
     * Get format
     * 
     * @return format
     **/
    @ApiModelProperty(value = "")
    public FormatEnum getFormat() {
        return format;
    }

    public void setFormat(FormatEnum format) {
        this.format = format;
    }

    public PageJSONWrapper language(String language) {
        this.language = language;
        return this;
    }

    /**
     * Get language
     * 
     * @return language
     **/
    @ApiModelProperty(value = "")
    public String getLanguage() {
        return language;
    }

    public void setLanguage(String language) {
        this.language = language;
    }

    public PageJSONWrapper link(String link) {
        this.link = link;
        return this;
    }

    /**
     * Get link
     * 
     * @return link
     **/
    @ApiModelProperty(value = "")
    public String getLink() {
        return link;
    }

    public void setLink(String link) {
        this.link = link;
    }

    public PageJSONWrapper linkText(String linkText) {
        this.linkText = linkText;
        return this;
    }

    /**
     * Get linkText
     * 
     * @return linkText
     **/
    @ApiModelProperty(value = "")
    public String getLinkText() {
        return linkText;
    }

    public void setLinkText(String linkText) {
        this.linkText = linkText;
    }

    public PageJSONWrapper sections(List<SectionsEnum> sections) {
        this.sections = sections;
        return this;
    }

    public PageJSONWrapper addSectionsItem(SectionsEnum sectionsItem) {
        if (this.sections == null) {
            this.sections = new ArrayList<>();
        }
        this.sections.add(sectionsItem);
        return this;
    }

    /**
     * Get sections
     * 
     * @return sections
     **/
    @ApiModelProperty(value = "")
    public List<SectionsEnum> getSections() {
        return sections;
    }

    public void setSections(List<SectionsEnum> sections) {
        this.sections = sections;
    }

    public PageJSONWrapper status(StatusEnum status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     * 
     * @return status
     **/
    @ApiModelProperty(value = "")
    public StatusEnum getStatus() {
        return status;
    }

    public void setStatus(StatusEnum status) {
        this.status = status;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PageJSONWrapper pageJSONWrapper = (PageJSONWrapper) o;
        return Objects.equals(this.format, pageJSONWrapper.format)
                && Objects.equals(this.language, pageJSONWrapper.language)
                && Objects.equals(this.link, pageJSONWrapper.link)
                && Objects.equals(this.linkText, pageJSONWrapper.linkText)
                && Objects.equals(this.sections, pageJSONWrapper.sections)
                && Objects.equals(this.status, pageJSONWrapper.status);
    }

    @Override
    public int hashCode() {
        return Objects.hash(format, language, link, linkText, sections, status);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PageJSONWrapper {\n");

        sb.append("    format: ").append(toIndentedString(format)).append("\n");
        sb.append("    language: ").append(toIndentedString(language)).append("\n");
        sb.append("    link: ").append(toIndentedString(link)).append("\n");
        sb.append("    linkText: ").append(toIndentedString(linkText)).append("\n");
        sb.append("    sections: ").append(toIndentedString(sections)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
