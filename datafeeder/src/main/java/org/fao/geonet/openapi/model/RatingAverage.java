/*
 * GeoNetwork Api Documentation (beta)
 * Learn how to access the catalog using the GeoNetwork REST API.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.fao.geonet.openapi.model;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * RatingAverage
 */

public class RatingAverage {
    @JsonProperty("lastComment")
    private String lastComment = null;

    @JsonProperty("ratingAverages")
    private Map<String, Integer> ratingAverages = null;

    @JsonProperty("ratingCount")
    private Integer ratingCount = null;

    @JsonProperty("userfeedbackCount")
    private Integer userfeedbackCount = null;

    public RatingAverage lastComment(String lastComment) {
        this.lastComment = lastComment;
        return this;
    }

    /**
     * Get lastComment
     * 
     * @return lastComment
     **/
    @ApiModelProperty(value = "")
    public String getLastComment() {
        return lastComment;
    }

    public void setLastComment(String lastComment) {
        this.lastComment = lastComment;
    }

    public RatingAverage ratingAverages(Map<String, Integer> ratingAverages) {
        this.ratingAverages = ratingAverages;
        return this;
    }

    public RatingAverage putRatingAveragesItem(String key, Integer ratingAveragesItem) {
        if (this.ratingAverages == null) {
            this.ratingAverages = new HashMap<>();
        }
        this.ratingAverages.put(key, ratingAveragesItem);
        return this;
    }

    /**
     * Get ratingAverages
     * 
     * @return ratingAverages
     **/
    @ApiModelProperty(value = "")
    public Map<String, Integer> getRatingAverages() {
        return ratingAverages;
    }

    public void setRatingAverages(Map<String, Integer> ratingAverages) {
        this.ratingAverages = ratingAverages;
    }

    public RatingAverage ratingCount(Integer ratingCount) {
        this.ratingCount = ratingCount;
        return this;
    }

    /**
     * Get ratingCount
     * 
     * @return ratingCount
     **/
    @ApiModelProperty(value = "")
    public Integer getRatingCount() {
        return ratingCount;
    }

    public void setRatingCount(Integer ratingCount) {
        this.ratingCount = ratingCount;
    }

    public RatingAverage userfeedbackCount(Integer userfeedbackCount) {
        this.userfeedbackCount = userfeedbackCount;
        return this;
    }

    /**
     * Get userfeedbackCount
     * 
     * @return userfeedbackCount
     **/
    @ApiModelProperty(value = "")
    public Integer getUserfeedbackCount() {
        return userfeedbackCount;
    }

    public void setUserfeedbackCount(Integer userfeedbackCount) {
        this.userfeedbackCount = userfeedbackCount;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RatingAverage ratingAverage = (RatingAverage) o;
        return Objects.equals(this.lastComment, ratingAverage.lastComment)
                && Objects.equals(this.ratingAverages, ratingAverage.ratingAverages)
                && Objects.equals(this.ratingCount, ratingAverage.ratingCount)
                && Objects.equals(this.userfeedbackCount, ratingAverage.userfeedbackCount);
    }

    @Override
    public int hashCode() {
        return Objects.hash(lastComment, ratingAverages, ratingCount, userfeedbackCount);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class RatingAverage {\n");

        sb.append("    lastComment: ").append(toIndentedString(lastComment)).append("\n");
        sb.append("    ratingAverages: ").append(toIndentedString(ratingAverages)).append("\n");
        sb.append("    ratingCount: ").append(toIndentedString(ratingCount)).append("\n");
        sb.append("    userfeedbackCount: ").append(toIndentedString(userfeedbackCount)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
