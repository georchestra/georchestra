/*
 * GeoNetwork Api Documentation (beta)
 * Learn how to access the catalog using the GeoNetwork REST API.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.fao.geonet.openapi.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * FeatureType
 */

public class FeatureType {
    @JsonProperty("attributeTable")
    private AttributeTable attributeTable = null;

    public FeatureType attributeTable(AttributeTable attributeTable) {
        this.attributeTable = attributeTable;
        return this;
    }

    /**
     * Get attributeTable
     * 
     * @return attributeTable
     **/
    @ApiModelProperty(value = "")
    public AttributeTable getAttributeTable() {
        return attributeTable;
    }

    public void setAttributeTable(AttributeTable attributeTable) {
        this.attributeTable = attributeTable;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FeatureType featureType = (FeatureType) o;
        return Objects.equals(this.attributeTable, featureType.attributeTable);
    }

    @Override
    public int hashCode() {
        return Objects.hash(attributeTable);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class FeatureType {\n");

        sb.append("    attributeTable: ").append(toIndentedString(attributeTable)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
