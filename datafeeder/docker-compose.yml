version: "3.1"

volumes:
  config:
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/src/test/resources/datadir

services:
  smtp:
    image: camptocamp/smtp-sink:latest
    ports:
      - "2025:25"
    restart: always

  database:
    image: georchestra/database:24.0.x
    environment:
      - POSTGRES_USER=georchestra
      - POSTGRES_PASSWORD=georchestra
    ports:
      - "15432:5432"

  ldap:
    image: georchestra/ldap:latest
    environment:
        - SLAPD_ORGANISATION=georchestra
        - SLAPD_DOMAIN=georchestra.org
        - SLAPD_PASSWORD=secret
        - SLAPD_LOG_LEVEL=32768 # See https://www.openldap.org/doc/admin24/slapdconfig.html#loglevel%20%3Clevel%3E

  console:
    image: georchestra/console:24.0.x
    depends_on:
      - ldap
      - database
    volumes:
      - config:/etc/georchestra
    environment:
      - JAVA_OPTIONS=-Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF
      - XMS=256M
      - XMX=1G
    ports:
      - "38080:8080"

  geoserver:
    image: georchestra/geoserver:24.0.x
    healthcheck:
      test: [ "CMD-SHELL", "curl -s -f http://localhost:8080/geoserver/gwc/service/wmts?SERVICE=WMTS&REQUEST=GetCapabilities >/dev/null || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 10
    depends_on:
      - ldap
    volumes:
      - config:/etc/georchestra
    environment:
      - JAVA_OPTIONS=-Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF
      - XMS=256M
    ports:
      - "18080:8080"

  geonetwork:
    image: georchestra/geonetwork:24.0.x
    healthcheck:
      test: [ "CMD-SHELL", "curl -s -f http://localhost:8080/geonetwork/srv/eng/catalog.search >/dev/null || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 10
    depends_on:
      - console
      - database
      - elasticsearch
    volumes:
      - config:/etc/georchestra
    environment:
      - DATA_DIR=/var/lib/geonetwork_data
      - JAVA_OPTIONS=-Duser.home=/tmp/jetty -Dgeorchestra.datadir=/etc/georchestra -Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF
      - XMS=256M
    ports:
      - "28080:8080"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"

