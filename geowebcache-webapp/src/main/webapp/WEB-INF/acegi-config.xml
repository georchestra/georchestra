<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
    <import resource="georchestra-acegi-config.xml" />
    <bean id="restFilterInvocationInterceptor"
        class="org.acegisecurity.intercept.web.FilterSecurityInterceptor">
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="accessDecisionManager">
            <bean class="org.acegisecurity.vote.AffirmativeBased">
                <property name="allowIfAllAbstainDecisions" value="false" />
                <property name="decisionVoters">
                    <list>
                        <bean class="org.acegisecurity.vote.RoleVoter" />
                        <bean class="org.acegisecurity.vote.AuthenticatedVoter" />
                    </list>
                </property>
            </bean>
        </property>
        <property name="objectDefinitionSource" ref="restFilterDefinitionMap" />
    </bean>
    <!--
        HTTP Method security rules. This follows the same format as the normal
        DefinitionSource, but allows methods to be specified as well. Remember
        that rules are matched in order, so please put the most specific rules
        at the beginning of the list. In order to have these applied, add
        restFilterDefintionMap to the end of the filter list in the
        filterChainProxy above
    -->
    <bean id="restFilterDefinitionMap" class="org.geowebcache.security.RESTfulDefinitionSource">
        <constructor-arg type="java.lang.String">
            <value>
                /rest/**=ROLE_ADMINISTRATOR
                /**:GET=IS_AUTHENTICATED_ANONYMOUSLY
                /**:POST,DELETE,PUT=ROLE_ADMINISTRATOR </value>
        </constructor-arg>
    </bean>
    <!--
        responsible for setting up a security context holder for other
        authentication mechanisms to work with
    -->
    <bean id="httpSessionContextIntegrationFilter"
        class="org.acegisecurity.context.HttpSessionContextIntegrationFilter">
        <!--
            no session should ever be created. We are processing basic
            authentication credentials on each request
        -->
        <property name="allowSessionCreation" value="false" />
    </bean>

    <!--
        Processes basic authentication headers and works together with the
        provided authentication manager and entry point to perform basic
        authentication
    -->
    <bean id="basicProcessingFilter" class="org.acegisecurity.ui.basicauth.BasicProcessingFilter">
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="authenticationEntryPoint" ref="authenticationEntryPoint" />
    </bean>
    <!--
        Puts default authentication informations in the security context
    -->
    <bean id="anonymousProcessingFilter"
        class="org.acegisecurity.providers.anonymous.AnonymousProcessingFilter">
        <property name="key" value="geowebcache" />
        <property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS" />
    </bean>
    <!--
        filter responsible for translating exceptions and delegating to the
        provided authenticationEntryPoint
    -->
    <bean id="exceptionTranslationFilter" class="org.acegisecurity.ui.ExceptionTranslationFilter">
        <property name="authenticationEntryPoint" ref="authenticationEntryPoint" />
    </bean>




    <!-- ======================== AUTHENTICATION ======================= -->
    <bean id="authenticationEntryPoint"
        class="org.acegisecurity.ui.basicauth.BasicProcessingFilterEntryPoint">
        <property name="realmName" value="Secured GeoWebCache" />
    </bean>
    <bean id="authenticationManager" class="org.acegisecurity.providers.ProviderManager">
        <property name="providers">
            <list>
                <ref bean="daoAuthenticationProvider" />
            </list>
        </property>
    </bean>

    <bean id="httpRequestAccessDecisionManager" class="org.acegisecurity.vote.AffirmativeBased">
        <property name="allowIfAllAbstainDecisions" value="false" />
        <property name="decisionVoters">
            <list>
                <ref bean="roleVoter" />
            </list>
        </property>
    </bean>
    <bean id="roleVoter" class="org.acegisecurity.vote.RoleVoter">
        <property name="rolePrefix" value="" />
    </bean>
</beans>
