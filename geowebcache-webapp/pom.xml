<?xml version="1.0" encoding="ISO-8859-1"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.georchestra</groupId>
    <artifactId>root</artifactId>
    <version>15.12</version>
  </parent>
  <artifactId>geowebcache-webapp</artifactId>
  <packaging>war</packaging>
  <name>geOrchestra GeoWebCache Web Application</name>
  <properties>
    <gwc.unpack.dir>${project.build.directory}/unpacked-webapp</gwc.unpack.dir>
    <geowebcache.war.excludes/>
    <maven.test.skip>false</maven.test.skip>
    <geowebcache.version>1.8.1</geowebcache.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.geowebcache</groupId>
      <artifactId>gwc-web</artifactId>
      <version>${geowebcache.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.9.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>3.1.1.RELEASE</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>apache-log4j-extras</artifactId>
      <version>1.1</version>
      <type>jar</type>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>${project.parent.groupId}</groupId>
      <artifactId>georchestra-commons</artifactId>
      <version>${project.parent.version}</version>
      <exclusions>
        <!-- apache commons-io is already provided by vanilla GWC,
             we do not want to mess the classloader up  -->
        <exclusion>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <build>
    <finalName>geowebcache-${server}</finalName>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
      <testResource>
        <directory>src/main/webapp/WEB-INF</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.codehaus.groovy.maven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <configuration>
          <classpath>
            <entry>
              <groupId>org.georchestra</groupId>
              <artifactId>config</artifactId>
              <version>${project.version}</version>
              <classifier>${server}</classifier>
            </entry>
          </classpath>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.4.1</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-geowebcache-war</id>
            <goals>
              <goal>unpack</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <excludes>**/acegi-config.xml,**/geowebcache-servlet.xml,**/lib/log4j-*.jar,**/log4j.*,**/web.xml,${geowebcache.war.excludes}</excludes>
              <artifactItems>
                <artifactItem>
                  <groupId>org.geowebcache</groupId>
                  <artifactId>gwc-web</artifactId>
                  <version>${geowebcache.version}</version>
                  <type>jar</type>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${gwc.unpack.dir}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <warSourceDirectory>${gwc.unpack.dir}</warSourceDirectory>
          <webXml>${basedir}/src/main/webapp/WEB-INF/web.xml</webXml>
          <filter>${confdir}/${project.artifactId}/maven.filter</filter>
          <webResources>
            <resource>
              <filtering>false</filtering>
              <directory>src/main/webapp</directory>
              <excludes>
                <exclude>gwc.properties</exclude>
              </excludes>
            </resource>
            <resource>
              <filtering>false</filtering>
              <directory>${confdir}/${project.artifactId}</directory>
              <excludes>
                <exclude>maven.filter</exclude>
                <exclude>README</exclude>
              </excludes>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>7.5.0.v20110901</version>
        <configuration>
          <connectors>
            <connector implementation="org.eclipse.jetty.server.bio.SocketConnector">
              <port>8080</port>
              <maxIdleTime>10000</maxIdleTime>
              <requestHeaderSize>20000</requestHeaderSize>
            </connector>
            <!--<connector implementation="org.eclipse.jetty.server.ssl.SslSocketConnector">-->
            <!--&lt;!&ndash; Note: If another server needs to communicate with this one with-->
            <!--https then it needs the environment variables set as follows:-->
            <!---Djavax.net.ssl.trustStore=keystore.jks -Djavax.net.ssl.trustStorePassword=password-->
            <!--&ndash;&gt;-->
            <!--<port>8443</port>-->
            <!--<keystore>${project.basedir}/keystore.jks</keystore>-->
            <!--<password>password</password>-->
            <!--<keyPassword>password</keyPassword>-->
            <!--<truststore>${project.basedir}/keystore.jks</truststore>-->
            <!--<trustPassword>password</trustPassword>-->
            <!--<maxIdleTime>60000</maxIdleTime>-->
            <!--</connector>-->
          </connectors>
          <webAppConfig>
            <contextPath>/gwc</contextPath>
            <descriptor>${basedir}/src/main/webapp/WEB-INF/web.xml</descriptor>
            <baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
              <resourcesAsCSV>${basedir}/src/main/webapp,${confdir}/${project.artifactId},${gwc.unpack.dir}</resourcesAsCSV>
            </baseResource>
          </webAppConfig>
          <stopKey>GWC_JETTY_STOP</stopKey>
          <stopPort>8090</stopPort>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>debianPackage</id>
      <build>
        <finalName>geowebcache-generic</finalName>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-scm-plugin</artifactId>
            <version>1.9.4</version>
            <configuration>
              <checkoutDirectory>${project.build.directory}/deb/etc/georchestra</checkoutDirectory>
              <connectionUrl>scm:git:https://github.com/georchestra/datadir.git</connectionUrl>
              <pushChanges>false</pushChanges>
            </configuration>
            <executions>
              <execution>
                <id>checkout-deb-default-datadir</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>checkout</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>remove-useless-directories</id>
                <phase>package</phase>
                <configuration>
                  <target>
                    <delete includeemptydirs="true">
                      <fileset dir="${project.build.directory}/deb/etc/georchestra">
                        <include name="**/*" />
                        <exclude name="geowebcache/**" />
                      </fileset>
                    </delete>
                 </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>fix-permissions</id>
                <phase>package</phase>
                <configuration>
                  <target>
                    <chmod perm="ugo+x">
                      <fileset dir="${project.build.directory}/deb">
                        <include name="**/bin/**"/>
                        <include name="**/sbin/**"/>
                        <include name="DEBIAN/post*"/>
                        <include name="DEBIAN/pre*"/>
                      </fileset>
                    </chmod>
                  </target>
                </configuration>
                <goals><goal>run</goal></goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>net.sf.debian-maven</groupId>
            <artifactId>debian-maven-plugin</artifactId>
            <version>1.0.6</version>
            <configuration>
              <packageName>georchestra-geowebcache</packageName>
              <packageDescription>geOrchestra standalone GeoWebCache</packageDescription>
              <projectOrganization>geOrchestra</projectOrganization>
              <maintainerName>geOrchestra PSC</maintainerName>
              <maintainerEmail>psc@georchestra.org</maintainerEmail>
              <excludeAllDependencies>true</excludeAllDependencies>
              <snapshotRevisionFile>${project.build.directory}</snapshotRevisionFile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>rpmPackage</id>
      <build>
        <finalName>geowebcache-generic</finalName>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-scm-plugin</artifactId>
            <version>1.9.4</version>
            <configuration>
              <checkoutDirectory>${project.build.directory}/deb/etc/georchestra</checkoutDirectory>
              <connectionUrl>scm:git:https://github.com/georchestra/datadir.git</connectionUrl>
              <pushChanges>false</pushChanges>
            </configuration>
            <executions>
              <execution>
                <id>checkout-deb-default-datadir</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>checkout</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <configuration>
                  <target>
                    <delete includeemptydirs="true">
                      <fileset dir="${project.build.directory}/deb/etc/georchestra">
                        <include name="**/*" />
                        <exclude name="geowebcache/**" />
                      </fileset>
                    </delete>
                 </target>
                </configuration>
                <id>remove-useless-directories</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>rpm-maven-plugin</artifactId>
            <version>2.1.3</version>
            <executions>
              <execution>
                <id>generate-rpm</id>
                <goals>
                  <goal>rpm</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <name>georchestra-${project.artifactId}</name>
              <sourceEncoding>UTF-8</sourceEncoding>
              <group>Applications/Internet</group>
              <keyname>${rpm.gpg.key}</keyname>
              <mappings>
                <mapping>
                  <directory>/usr/share/lib/georchestra-${project.artifactId}</directory>
                  <sources>
                    <source>
                      <location>${project.build.directory}</location>
                      <includes>
                        <include>geowebcache-generic.war</include>
                      </includes>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>/</directory>
                  <sources>
                    <source>
                      <location>${project.build.directory}/deb</location>
                    </source>
                  </sources>
                </mapping>
              </mappings>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker</id>
      <properties>
        <dockerImageName>georchestra/geowebcache</dockerImageName>
        <dockerDatadirScmUrl>scm:git:https://github.com/georchestra/datadir.git</dockerDatadirScmUrl>
        <dockerDatadirScmVersion>docker-15.12</dockerDatadirScmVersion>
      </properties>
      <build>
        <finalName>geowebcache</finalName>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-scm-plugin</artifactId>
            <version>1.9.4</version>
            <configuration>
              <checkoutDirectory>${project.build.directory}/datadir/</checkoutDirectory>
              <connectionUrl>${dockerDatadirScmUrl}</connectionUrl>
              <pushChanges>false</pushChanges>
              <scmVersion>${dockerDatadirScmVersion}</scmVersion>
              <scmVersionType>branch</scmVersionType>
            </configuration>
            <executions>
              <execution>
                <id>checkout-docker-default-datadir</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>checkout</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.3.8</version>
            <configuration>
              <imageName>${dockerImageName}</imageName>
              <dockerDirectory>${project.basedir}/src/docker</dockerDirectory>
              <resources>
                <resource>
                  <targetPath>/var/lib/jetty/webapps</targetPath>
                  <directory>${project.build.directory}</directory>
                  <include>geowebcache.war</include>
                </resource>
                <resource>
                  <targetPath>/etc/georchestra</targetPath>
                  <directory>${project.build.directory}/datadir</directory>
                  <include>geowebcache/**</include>
                </resource>
              </resources>
              <!-- This will require to set up the docker-hub credentials correctly
                   into your ~/.m2/settings.xml, see:
                   https://github.com/spotify/docker-maven-plugin#authenticating-with-private-registries
              -->
              <serverId>docker-hub</serverId>
              <registryUrl>https://index.docker.io/v1/</registryUrl>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>19.0</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
