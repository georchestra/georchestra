name: "header"
on:
  workflow_dispatch:
  push:
    paths:
      - "commons/**"
      - "header/**"
  pull_request:
    paths:
      - "commons/**"
      - "header/**"

jobs:
  build:
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: "Checking out"
      uses: actions/checkout@v1

    - name: "Setting up Java"
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: 'maven'
        server-id: geOrchestra-artifactory
        server-username: ARTIFACTORY_USERNAME_REF
        server-password: ARTIFACTORY_TOKEN_REF

    - name: "Installing & checking formatting"
      run: ./mvnw --no-transfer-progress -B -P-all,header -Dfmt.action=validate install -Dadditionalparam=-Xdoclint:none -DskipTests

    - name: "Running tests"
      working-directory: header/
      run: ../mvnw --no-transfer-progress clean verify -Pit -Dfmt.skip=true -Dadditionalparam=-Xdoclint:none

    - name: Getting image tag
      if: github.repository == 'georchestra/georchestra' && github.actor != 'dependabot[bot]'
      id: version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    - name: "Building docker image"
      if: github.repository == 'georchestra/georchestra' && github.actor != 'dependabot[bot]'
      working-directory: header/
      run: ../mvnw --no-transfer-progress clean package docker:build -Pdocker,log4j-logstash,sentry-log4j -DdockerImageName=georchestra/header:${{ steps.version.outputs.VERSION }} -DskipTests

    - name: "Logging in docker.io"
      uses: azure/docker-login@v1
      if: github.repository == 'georchestra/georchestra' && github.actor != 'dependabot[bot]' && github.event_name != 'pull_request'
      with:
        username: '${{ secrets.DOCKER_HUB_USERNAME }}'
        password: '${{ secrets.DOCKER_HUB_PASSWORD }}'

    - name: "Update Docker Hub Description"
      if: github.ref == 'refs/heads/master' && github.repository == 'georchestra/georchestra' && github.actor != 'dependabot[bot]' && github.event_name != 'pull_request'
      uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        repository: georchestra/header
        readme-filepath: ./header/DOCKER_HUB.md
        short-description: 'Header module for the geOrchestra SDI'

    - name: "Pushing latest to docker.io"
      if: github.ref == 'refs/heads/master' && github.repository == 'georchestra/georchestra' && github.actor != 'dependabot[bot]' && github.event_name != 'pull_request'
      run: |
        docker tag georchestra/header:${{ steps.version.outputs.VERSION }} georchestra/header:latest
        docker push georchestra/header:latest

    - name: "Pushing release branch to docker.io"
      if: contains(github.ref, 'refs/heads/24.') && github.repository == 'georchestra/georchestra' && github.actor != 'dependabot[bot]' && github.event_name != 'pull_request'
      run: |
        docker push georchestra/header:${{ steps.version.outputs.VERSION }}

    - name: "Pushing release tag to docker.io"
      if: contains(github.ref, 'refs/tags/24.') && github.repository == 'georchestra/georchestra' && github.actor != 'dependabot[bot]' && github.event_name != 'pull_request'
      run: |
        docker push georchestra/header:${{ steps.version.outputs.VERSION }}

    - name: "Publish war in artifactory"
      run: ./mvnw deploy --no-transfer-progress -B -P-all,header -DskipTests
      if: github.actor != 'dependabot[bot]' && github.event_name != 'pull_request'
      continue-on-error: true
      env:
        ARTIFACTORY_TOKEN_REF: ${{ secrets.ARTIFACTORY_TOKEN }}
        ARTIFACTORY_USERNAME_REF: ${{ secrets.ARTIFACTORY_USERNAME }}

    - name: "Remove SNAPSHOT jars from repository"
      if: github.actor != 'dependabot[bot]' && github.event_name != 'pull_request'
      run: |
        find .m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}
