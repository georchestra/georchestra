name: "geoserver"
on:
  push:
    paths:
    - "commons/**"
    - "geoserver/**"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: "Checking out"
      uses: actions/checkout@v1

    - name: "Checking out submodules"
      run: git submodule update --init --recursive geoserver/geoserver-submodule

    - name: "Setting up Java"
      uses: actions/setup-java@v1
      with:
        java-version: '8.x'

    - name: "Configuring Maven"
      run: |
          mkdir -p $HOME/.m2
          echo $M2_SETTINGS_FILE > $HOME/.m2/settings.xml
      env:
          M2_SETTINGS_FILE: ${{ secrets.M2_SETTINGS_FILE }}

    - name: "install"
      run: ./mvnw --no-transfer-progress -B -P-all,geoserver -Dfmt.skip=true install -Dadditionalparam=-Xdoclint:none -DskipTests

    - name: "run test"
      working-directory: geoserver/
      run: ../mvnw --no-transfer-progress clean verify -Pit -Dfmt.skip=true -Dadditionalparam=-Xdoclint:none

    - name: "build a docker image"
      working-directory: geoserver/webapp
      run: ../../mvnw --no-transfer-progress clean package docker:build -Pdocker,colormap,mbtiles,wps-download,app-schema,control-flow,csw,feature-pregeneralized,importer,inspire,libjpeg-turbo,monitor,pyramid,wps,css,s3-geotiff,jp2k -DdockerImageName=docker.pkg.github.com/georchestra/georchestra/geoserver:${GITHUB_REF##*/} -DskipTests

    - name: "publish the docker image"
      run: |
        docker login docker.pkg.github.com --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        docker push docker.pkg.github.com/georchestra/georchestra/geoserver:${GITHUB_REF##*/}
      env:
          DOCKER_USERNAME: georchestra
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

    - name: "build a docker image (geofence)"
      working-directory: geoserver/webapp/
      run: ../../mvnw --no-transfer-progress clean package docker:build -Pdocker,colormap,mbtiles,wps-download,app-schema,control-flow,csw,feature-pregeneralized,importer,inspire,libjpeg-turbo,monitor,pyramid,wps,css,s3-geotiff,jp2k,geofence -DdockerImageName=docker.pkg.github.com/georchestra/georchestra/geoserver:${GITHUB_REF##*/}-geofence -DskipTests

    - name: "publish the docker image (geofence)"
      run: |
        docker login docker.pkg.github.com --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        docker push docker.pkg.github.com/georchestra/georchestra/geoserver:${GITHUB_REF##*/}-geofence
      env:
          DOCKER_USERNAME: georchestra
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

    - name: "publish the docker images on docker-hub"
      run: |
        docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        docker tag docker.pkg.github.com/georchestra/georchestra/geoserver:${GITHUB_REF##*/} georchestra/geoserver:latest
        docker tag docker.pkg.github.com/georchestra/georchestra/geoserver:${GITHUB_REF##*/}-geofence georchestra/geoserver:latest-geofence
        docker push georchestra/geoserver:latest
        docker push georchestra/geoserver:latest-geofence
      if: github.ref == 'refs/heads/master'
      env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
