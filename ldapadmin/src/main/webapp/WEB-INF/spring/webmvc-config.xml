<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"


        xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/data/jpa
            http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc.xsd">

  <!-- Directory to scan for repository classes -->
  <jpa:repositories base-package="org.georchestra.ldapadmin.dao" />

  <mvc:annotation-driven/>

  <context:annotation-config/>

  <!--  First provided ldapadmin.properties from webapp with prio  2 -->
  <context:property-placeholder location="/WEB-INF/spring/ldapadmin.properties" ignore-resource-not-found="true" ignore-unresolvable="true" order="2"/>

  <!--  Then the one from datadir with prio  1 -->
  <context:property-placeholder location="file:${georchestra.datadir}/ldapadmin/ldapadmin.properties" ignore-resource-not-found="true" ignore-unresolvable="true" order="1"/>

 <!--  First provided protectedgroups.properties from webapp with prio  2 -->
  <context:property-placeholder location="/WEB-INF/spring/protectedgroups.properties" ignore-resource-not-found="true" ignore-unresolvable="true" order="2"/>

  <!--  Then the one from datadir with prio  1 -->
  <context:property-placeholder location="file:${georchestra.datadir}/ldapadmin/protectedgroups.properties" ignore-resource-not-found="true" ignore-unresolvable="true" order="1"/>


  <context:component-scan base-package="org.georchestra.ldapadmin"/>

  <!-- Resolves views selected for rendering by @Controllers to .jsp resources
	   in the /WEB-INF/views directory
  -->
  <bean class="org.georchestra.ldapadmin.Configuration">
    <property name="publicContextPath" value="${publicContextPath}"/>
  </bean>

  <mvc:interceptors>
    <bean class="org.georchestra.ldapadmin.ConfigurationInterceptor"/>
  </mvc:interceptors>

  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/views/" p:suffix=".jsp" />

  <bean id="reCaptchaParameters" class="org.georchestra.ldapadmin.bs.ReCaptchaParameters">
    <property name="publicKey" value="${publicKey}"/>
    <property name="privateKey" value="${privateKey}"/>
    <property name="verifyUrl" value="${verificationURL}"/>
  </bean>

  <!-- LDAP connection -->
  <bean id="contextSource" class="org.springframework.ldap.core.support.LdapContextSource">
    <property name="url" value="${ldapUrl}"/>
    <property name="base" value="${baseDN}"/>
    <property name="userDn" value="${ldapAdminDn}"/>
    <property name="password" value="${ldap.admin.password}"/>
  </bean>

  <bean id="ldapTemplate" class="org.springframework.ldap.core.LdapTemplate">
    <constructor-arg ref="contextSource"/>
  </bean>

  <bean id="groupDao" class="org.georchestra.ldapadmin.ds.GroupDaoImpl">
    <property name="ldapTemplate" ref="ldapTemplate"/>
    <property name="uniqueNumberField" value="${groupUniqueNumberField}"/>
    <property name="userSearchBaseDN" value="${userSearchBaseDN}"/>
    <property name="groupSearchBaseDN" value="${groupSearchBaseDN}"/>
  </bean>

  <bean id="accountDao" class="org.georchestra.ldapadmin.ds.AccountDaoImpl">
    <constructor-arg ref="ldapTemplate"/>
    <constructor-arg ref="groupDao"/>
    <property name="uniqueNumberField" value="${accountUniqueNumberField}"/>
    <property name="userSearchBaseDN" value="${userSearchBaseDN}"/>
  </bean>

  <bean class="org.georchestra.ldapadmin.ws.backoffice.users.UserRule">
    <property name="listOfprotectedUsers">
      <description>Comma separated list of one or more user identifiers (uid) of protected user</description>
        <!-- Users are defined as a comma separated list of uid and can be overridden in data dir with "protectedUserList" key-->
      <value>${protectedUserList:geoserver_privileged_user}</value>
    </property>
  </bean>
  
  <bean class="org.georchestra.ldapadmin.ws.backoffice.groups.GroupProtected">
    <property name="listOfprotectedGroups">
      <description>Comma separated list of one or more protected Groups</description>
        <!-- Groups are defined as a comma separated list of Groups name and can be override in data dir with "protectedGroupList" key-->
      <value>${protectedGroupList:ADMINISTRATOR,SV_.*,MOD_.*}</value>
    </property>
  </bean>
  
  <bean id="userTokenDao" class="org.georchestra.ldapadmin.ds.UserTokenDao"/>

  <bean id="waitForDb" class="org.georchestra.commons.WaitForDb" init-method="test">
    <property name="url" value="${psql.url}"/>
    <property name="username" value="${psql.user}"/>
    <property name="password" value="${psql.pass}"/>
    <property name="driverClassName" value="org.postgresql.Driver"/>
  </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" depends-on="waitForDb">
        <property name="url" value="${psql.url}"/>
        <property name="username" value="${psql.user}"/>
        <property name="password" value="${psql.pass}"/>
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="testOnBorrow" value="true"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxOpenPreparedStatements" value="-1"/>
        <property name="defaultReadOnly" value="false"/>
        <property name="defaultAutoCommit" value="true"/>
    </bean>

   <!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
       <!--<property name="driverClassName" value="org.postgresql.Driver"/>-->
       <!--<property name="url" value="${psql.url}"/>-->
       <!--<property name="username" value="${psql.user}"/>-->
       <!--<property name="password" value="${psql.pass}"/>-->
   <!--</bean>-->

   <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
       <property name="dataSource" ref="dataSource" />
       <property name="persistenceUnitName" value="myPU" />
       <property name="persistenceXmlLocation" value="classpath:persistence.xml"/>
       <property name="jpaVendorAdapter">
           <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
       </property>
       <property name="jpaProperties">
           <props>
               <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL94Dialect</prop>
               <prop key="hibernate.show_sql">false</prop>
               <prop key="hibernate.format_sql">false</prop>
               <prop key="hibernate.hbm2ddl.auto">update</prop>
           </props>
       </property>
   </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>


  <bean id="expiredTokenCleanTask" class="org.georchestra.ldapadmin.bs.ExpiredTokenCleanTask"/>

  <!-- Resolves localized messages*.properties and application.properties
		files in the application to allow for internationalization.
		
		The messages*.properties files translate Roo generated messages which are part
		of the admin interface, the application.properties resource bundle localizes
		all application specific messages such as entity names and menu items.
  -->
  <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
    p:basenames="WEB-INF/i18n/messages,WEB-INF/i18n/application"
    p:defaultEncoding="UTF-8"
    p:fallbackToSystemLocale="false" />

  <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>

  <!-- Store preferred language configuration in a cookie -->
  <bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver" id="localeResolver" p:cookieName="locale"/>

  <!-- Resolves localized <theme_name>.properties files in the classpath to allow for theme support -->
  <bean class="org.springframework.ui.context.support.ResourceBundleThemeSource" id="themeSource"/>

  <!-- Store preferred theme configuration in a cookie -->
  <bean class="org.springframework.web.servlet.theme.CookieThemeResolver" id="themeResolver" p:cookieName="theme" p:defaultThemeName="standard"/>

  <!-- This bean resolves specific types of exceptions to corresponding logical
        - view names for error views. The default behaviour of DispatcherServlet
        - is to propagate all exceptions to the servlet container: this will happen
        - here with all other types of exceptions.
  -->
  <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" p:defaultErrorView="uncaughtException">
    <property name="exceptionMappings">
      <props>
        <prop key=".DataAccessException">dataAccessFailure</prop>
        <prop key=".NoSuchRequestHandlingMethodException">resourceNotFound</prop>
        <prop key=".TypeMismatchException">resourceNotFound</prop>
        <prop key=".MissingServletRequestParameterException">resourceNotFound</prop>
      </props>
    </property>
  </bean>

  <!-- Email Factory configuration -->
  <bean id="emailFactory" class="org.georchestra.ldapadmin.mailservice.EmailFactoryImpl" init-method="freeze">
    <property name="smtpHost" value="${smtpHost}"/>
    <property name="smtpPort" value="${smtpPort}"/>
    <property name="emailHtml" value="${emailHtml}"/>
    <property name="replyTo" value="${replyTo}"/>
    <property name="from" value="${from}"/>
    <property name="bodyEncoding" value="UTF-8"/>
    <property name="subjectEncoding" value="UTF-8"/>
    <property name="languages" value="${language}"/>
    <property name="accountWasCreatedEmailFile" value="/WEB-INF/templates/newaccount-was-created-template.txt"/>
    <property name="accountWasCreatedEmailSubject" value="${subject.account.created}"/>
    <property name="accountCreationInProcessEmailFile" value="/WEB-INF/templates/account-creation-in-progress-template.txt"/>
    <property name="accountCreationInProcessEmailSubject" value="${subject.account.in.process}"/>
    <property name="newAccountRequiresModerationEmailFile" value="/WEB-INF/templates/newaccount-requires-moderation-template.txt"/>
    <property name="newAccountRequiresModerationEmailSubject" value="${subject.requires.moderation}"/>
    <property name="changePasswordEmailFile" value="/WEB-INF/templates/changepassword-email-template.txt"/>
    <property name="changePasswordEmailSubject" value="${subject.change.password}"/>
    <property name="accountUidRenamedEmailFile" value="/WEB-INF/templates/account-uid-renamed.txt" />
    <property name="accountUidRenamedEmailSubject" value="${subject.account.uid.renamed}" />    
  </bean>

  <bean id="mailService" class="org.georchestra.ldapadmin.mailservice.MailService">
    <constructor-arg ref="emailFactory"/>
  </bean>

  <bean id="moderator" class="org.georchestra.ldapadmin.bs.Moderator">
    <property name="moderatedSignup" value="${moderatedSignup}"/>
    <property name="moderatorEmail" value="${moderatorEmail}"/>
  </bean>

  <bean id="expiredTokenManagement" class="org.georchestra.ldapadmin.bs.ExpiredTokenManagement">
    <property name="delayInDays" value="${delayInDays}"/>
  </bean>

  <bean id="validation" class="org.georchestra.ldapadmin.ws.utils.Validation">
    <property name="requiredFields" value="${requiredFields}"/>
  </bean>

  <bean id="warnUserIfUidModified" class="java.lang.Boolean">
    <constructor-arg value="${warnUserIfUidModified}" />
  </bean>

  <bean id="georchestraConfiguration" class="org.georchestra.commons.configuration.GeorchestraConfiguration">
    <constructor-arg value="ldapadmin"/>
  </bean>

</beans>
