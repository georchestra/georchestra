<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:annotation-config/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
        <property name="attributes">
            <map>
                <entry key="headerHeight" value="${headerHeight:90}" />
                <entry key="headerUrl" value="${headerUrl:/header/}" />
            </map>
        </property>
    </bean>

    <bean id="proxy"  init-method="init" class="org.georchestra.security.Proxy">
          <property name="publicUrl" value="${publicUrl:https://georchestra.mydomain.org}"/>
          <property name="headerManagement" ref="headerManagementBean"/>
          <property name="defaultCharset" value="UTF-8"/>
          <property name="defaultTarget" value="${defaultTarget:/header/}" />
          <property name="proxyPermissionsFile" value="permissions.xml"/>
          <property name="httpClientTimeout">
              <bean class="java.lang.Integer">
                  <constructor-arg value="${http_client_timeout:1200000}" />
              </bean>
          </property>

          <property name="targets">
               <map>
                    
               </map>
          </property>
          <property name="requireCharsetContentTypes">
            <list>
                <value>application/xml</value>
                <value>text/xml</value>
                <!-- OSM XML -->
                <value>application/osm3s+xml</value>
                <!-- OGC Service Exception -->
                <value>application/vnd.ogc.se_xml</value>
                <value>application/vnd.ogc.se+xml</value>
                <!-- OGC Success (SLD Put) -->
                <value>application/vnd.ogc.success+xml</value>
                <!-- WMS Capabilities -->
                <value>application/vnd.ogc.wms_xml</value>
                <!-- WMC -->
                <value>application/vnd.ogc.context+xml</value>
                <!-- GML -->
                <value>application/vnd.ogc.gml</value>
                <!-- SLD -->
                <value>application/vnd.ogc.sld+xml</value>
                <!-- KML -->
                <value>application/vnd.google-earth.kml+xml</value>
            </list>
          </property>
    </bean>
    <bean id="headerManagementBean"
          class="org.georchestra.security.HeadersManagementStrategy">
        <!-- If set then the referrer header will always be the current server even if client sends its
             own referrer header

             Comment out property to use client referrer instead of this host -->
        <property name="referer" value="${publicUrl:https://georchestra.mydomain.org}/"/>
        <property name="headerProviders">
            <list>
                <bean class="org.georchestra.security.TrustedProxyRequestHeaderProvider" />
                <bean class="org.georchestra.security.SecurityRequestHeaderProvider"/>
                <bean class="org.georchestra.security.ImpersonateUserRequestHeaderProvider">
                    <property name="trustedUsers" value="${trustedUsers:geoserver_privileged_user}"/>
                </bean>
                <bean class="org.georchestra.security.LdapUserDetailsRequestHeaderProvider" init-method="init">
                    <constructor-arg index="0" ref="ldapUserSearch"/>
                    <constructor-arg index="1" value="${orgSearchBaseDN:ou=orgs}"/>
                    <constructor-arg index="2">
                        <map>
                        
                        </map>
                    </constructor-arg>
                </bean>
            </list>
        </property>
        <property name="filters">
            <list>
                <bean class="org.georchestra.security.SecurityRequestHeaderFilter" />
                <bean class="org.georchestra.security.RemoveXForwardedHeaders">
                    <!-- Only one of includes or excludes may have elements -->

                    <!-- set the patterns of urls that (when matched) will have the x-forwarded-* headers removed -->
                    <property name="includes" value="${removedXForwardedHeaders:.*geo.admin.ch.*,.*rolnp.fr.*}"/>
                    <property name="excludes">
                        <list>
                            <!-- set the patterns of urls that (when matched) will NOT have the x-forwarded-* headers removed -->
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <context:property-placeholder location="
      file:${georchestra.datadir}/default.properties,
      file:${georchestra.datadir}/security-proxy/security-proxy.properties"
      ignore-resource-not-found="true" ignore-unresolvable="true" />

    <!-- DataSource used for the ogc-server-stats OGC request stats logger -->
    <bean id="ogcStatsDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${ogcStats.jdbcURL:jdbc:postgresql://database:5432/georchestra}"/>
        <property name="user" value="${ogcStats.databaseUser:georchestra}"/>
        <property name="password" value="${ogcStats.databasePassword:georchestra}"/>
        <property name="driverClass" value="org.postgresql.Driver"/>
        <property name="initialPoolSize" value="1"/>
        <property name="minPoolSize" value="${ogcStats.minPoolSize:1}"/>
        <property name="maxPoolSize" value="${ogcStats.maxPoolSize:5}"/>
        <property name="checkoutTimeout" value = "${ogcStats.timeout:2000}"/>
        <property name="idleConnectionTestPeriod" value="30"/>
        <property name="maxIdleTime" value = "${ogcStats.maxIdleTime:60}"/>
        <property name="acquireIncrement" value="2"/>
        <property name="testConnectionOnCheckout" value="true"/> <!-- Uses JDBC4's Connection.isValid() -->
    </bean>

</beans>
