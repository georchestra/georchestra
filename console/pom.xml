<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>org.georchestra</groupId>
    <artifactId>root</artifactId>
    <version>23.1-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>console</artifactId>
  <packaging>war</packaging>
  <name>Console</name>
  <url>http://www.georchestra.org</url>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <roo.version>1.1.5.RELEASE</roo.version>
    <context.name>${project.artifactId}</context.name>
    <json.version>20210307</json.version>
    <gt.version>27.2</gt.version>
  </properties>
  <dependencies>
    <!-- geOrchestra libraries -->
    <dependency>
      <groupId>org.georchestra</groupId>
      <artifactId>georchestra-commons</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.georchestra</groupId>
      <artifactId>georchestra-ldap-account-management</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-geojson-store</artifactId>
      <version>${gt.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-epsg-hsql</artifactId>
      <version>${gt.version}</version>
    </dependency>
  	<dependency>
  	  <!-- upgrade version to match gt-geojson-store's expected one -->
  	  <groupId>com.fasterxml.jackson.core</groupId>
  	  <artifactId>jackson-core</artifactId>
  	  <version>2.13.2</version>
  	</dependency>
  	<dependency>
  	  <!-- upgrade version to match gt-geojson-store's expected one -->
  	  <groupId>com.fasterxml.jackson.core</groupId>
  	  <artifactId>jackson-databind</artifactId>
  	  <version>2.13.4.1</version>
  	</dependency>
  	<dependency>
  	  <!-- upgrade version to match gt-geojson-store's expected one -->
  	  <groupId>com.fasterxml.jackson.core</groupId>
  	  <artifactId>jackson-annotations</artifactId>
  	  <version>2.13.2</version>
  	</dependency>

    <!--Dependency for swagger 2 -->
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>2.9.2</version>
    </dependency>
    <!--Dependency for swagger ui -->
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>2.9.2</version>
    </dependency>
    <!-- General dependencies for standard applications -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.tuckey</groupId>
      <artifactId>urlrewritefilter</artifactId>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>apache-log4j-extras</artifactId>
      <type>jar</type>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.flexjson</groupId>
      <artifactId>flexjson</artifactId>
    </dependency>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
    </dependency>
    <!-- Spring dependencies -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
      <version>2.4.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
    </dependency>
    <!-- Spring LDAP -->
    <dependency>
      <groupId>org.springframework.ldap</groupId>
      <artifactId>spring-ldap-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.ldap</groupId>
      <artifactId>spring-ldap-core-tiger</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.ldap</groupId>
      <artifactId>spring-ldap-odm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.ldap</groupId>
      <artifactId>spring-ldap-ldif-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.ldap</groupId>
      <artifactId>spring-ldap-ldif-batch</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-ldap</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-commons</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.amqp</groupId>
      <artifactId>spring-amqp</artifactId>
      <version>1.1.4.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.amqp</groupId>
      <artifactId>spring-rabbit</artifactId>
      <version>1.1.1.RELEASE</version>
    </dependency>
    <!-- commons -->
    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.el</groupId>
      <artifactId>el-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tiles</groupId>
      <artifactId>tiles-jsp</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator-annotation-processor</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
    </dependency>
    <dependency>
      <groupId>com.mchange</groupId>
      <artifactId>c3p0</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <classifier />
    </dependency>
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib-nodep</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.transaction</groupId>
      <artifactId>jta</artifactId>
    </dependency>
    <dependency>
      <groupId>com.googlecode.ez-vcard</groupId>
      <artifactId>ez-vcard</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-pool</groupId>
      <artifactId>commons-pool</artifactId>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>org.zeroturnaround</groupId>
      <artifactId>zt-zip</artifactId>
      <version>1.14</version>
    </dependency>
    <dependency>
      <groupId>org.ldaptive</groupId>
      <artifactId>ldaptive</artifactId>
      <version>1.0.3</version>
    </dependency>
	<dependency>
	  <groupId>com.vladmihalcea</groupId>
	  <artifactId>hibernate-types-52</artifactId>
	  <version>2.10.3</version>
	</dependency>

    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.database-rider</groupId>
      <artifactId>rider-spring</artifactId>
      <version>1.5.1</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-simple</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.georchestra</groupId>
      <artifactId>georchestra-testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <finalName>${project.artifactId}-${server}</finalName>
    <plugins>
      <plugin>
        <groupId>net.revelc.code.formatter</groupId>
        <artifactId>formatter-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${project.basedir}/node</directory>
              <directory>${project.basedir}/src/main/webapp/manager/public</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <packagingExcludes>manager/node_modules/**</packagingExcludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <excludes>
            <exclude>**/*_Roo_*</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
      </plugin>
      <!-- IDE -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <!-- Note 2.8 does not work with AspectJ aspect path -->
        <configuration>
          <downloadSources>true</downloadSources>
          <downloadJavadocs>false</downloadJavadocs>
          <wtpversion>2.0</wtpversion>
          <additionalBuildcommands>
            <buildCommand>
              <name>org.eclipse.ajdt.core.ajbuilder</name>
              <arguments>
                <aspectPath>org.springframework.aspects</aspectPath>
              </arguments>
            </buildCommand>
            <buildCommand>
              <name>org.springframework.ide.eclipse.core.springbuilder</name>
            </buildCommand>
          </additionalBuildcommands>
          <additionalProjectnatures>
            <projectnature>org.eclipse.ajdt.ui.ajnature</projectnature>
            <projectnature>com.springsource.sts.roo.core.nature</projectnature>
            <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
          </additionalProjectnatures>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-idea-plugin</artifactId>
        <configuration>
          <downloadSources>true</downloadSources>
          <dependenciesAsLibraries>true</dependenciesAsLibraries>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <version>1.1</version>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>11.0.12</version>
        <configuration>
          <webApp>
            <contextPath>/console</contextPath>
          </webApp>
          <scanIntervalSeconds>5</scanIntervalSeconds>
          <scanTargets>
            <scanTarget>src/main/java/</scanTarget>
            <scanTarget>src/main/resources/</scanTarget>
            <scanTarget>src/main/webapp/</scanTarget>
          </scanTargets>
          <httpConnector>
            <port>8286</port>
          </httpConnector>
          <systemProperties>
            <systemProperty>
              <name>georchestra.datadir</name>
              <value>/etc/georchestra</value>
            </systemProperty>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-descriptor</id>
            <goals>
              <goal>attach-descriptor</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.6</version>
        <executions>
          <execution>
            <id>install-node-and-npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <phase>generate-resources</phase>
          </execution>
          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <arguments>install --unsafe-perm</arguments>
              <installDirectory>${project.basedir}</installDirectory>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <skip>${skip.npm}</skip>
          <nodeVersion>v10.18.0</nodeVersion>
          <npmVersion>6.13.4</npmVersion>
          <installDirectory>${project.basedir}</installDirectory>
          <workingDirectory>${project.basedir}/src/main/webapp/manager</workingDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <!-- fork to avoid system properties for different ITs stepping onto each other -->
          <forkCount>2</forkCount>
          <reuseForks>false</reuseForks>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>debianPackage</id>
      <build>
        <finalName>${project.artifactId}-generic</finalName>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-scm-plugin</artifactId>
            <version>1.11.2</version>
            <configuration>
              <checkoutDirectory>${project.build.directory}/deb/etc/georchestra</checkoutDirectory>
              <connectionUrl>scm:git:https://github.com/georchestra/datadir.git</connectionUrl>
              <pushChanges>false</pushChanges>
              <scmVersion>${packageDatadirScmVersion}</scmVersion>
              <scmVersionType>branch</scmVersionType>
            </configuration>
            <executions>
              <execution>
                <id>checkout-deb-default-datadir</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>checkout</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>
            <executions>
              <execution>
                <id>remove-useless-directories</id>
                <phase>package</phase>
                <configuration>
                  <target>
                    <delete includeemptydirs="true">
                      <fileset defaultexcludes="false"
                        dir="${project.build.directory}/deb/etc/georchestra">
                        <include name="**/*" />
                        <exclude name="${project.artifactId}/**" />
                      </fileset>
                    </delete>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>fix-permissions</id>
                <phase>package</phase>
                <configuration>
                  <target>
                    <chmod perm="ugo+x">
                      <fileset
                        dir="${project.build.directory}/deb">
                        <include name="**/bin/**" />
                        <include name="**/sbin/**" />
                        <include name="DEBIAN/post*" />
                        <include name="DEBIAN/pre*" />
                      </fileset>
                    </chmod>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>net.sf.debian-maven</groupId>
            <artifactId>debian-maven-plugin</artifactId>
            <version>1.0.6</version>
            <configuration>
              <packageName>georchestra-console</packageName>
              <packageDescription>geOrchestra LDAP management
                application</packageDescription>
              <packageVersion>${project.packageVersion}</packageVersion>
              <projectOrganization>geOrchestra</projectOrganization>
              <maintainerName>PSC</maintainerName>
              <maintainerEmail>psc@georchestra.org</maintainerEmail>
              <excludeAllDependencies>true</excludeAllDependencies>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>rpmPackage</id>
      <build>
        <finalName>${project.artifactId}-generic</finalName>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-scm-plugin</artifactId>
            <version>1.11.2</version>
            <configuration>
              <checkoutDirectory>${project.build.directory}/deb/etc/georchestra</checkoutDirectory>
              <connectionUrl>scm:git:https://github.com/georchestra/datadir.git</connectionUrl>
              <pushChanges>false</pushChanges>
              <scmVersion>${packageDatadirScmVersion}</scmVersion>
              <scmVersionType>branch</scmVersionType>
            </configuration>
            <executions>
              <execution>
                <id>checkout-deb-default-datadir</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>checkout</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <configuration>
                  <target>
                    <delete includeemptydirs="true">
                      <fileset
                        dir="${project.build.directory}/deb/etc/georchestra">
                        <include name="**/*" />
                        <exclude name="${project.artifactId}/**" />
                      </fileset>
                    </delete>
                  </target>
                </configuration>
                <id>remove-useless-directories</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>rpm-maven-plugin</artifactId>
            <version>2.1.3</version>
            <executions>
              <execution>
                <id>generate-rpm</id>
                <goals>
                  <goal>rpm</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <name>georchestra-${project.artifactId}</name>
              <sourceEncoding>UTF-8</sourceEncoding>
              <group>Applications/Internet</group>
              <keyname>${rpm.gpg.key}</keyname>
              <mappings>
                <mapping>
                  <directory>/usr/share/lib/georchestra-${project.artifactId}</directory>
                  <sources>
                    <source>
                      <location>${project.build.directory}</location>
                      <includes>
                        <include>${project.artifactId}-generic.war</include>
                      </includes>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>/</directory>
                  <sources>
                    <source>
                      <location>${project.build.directory}/deb</location>
                    </source>
                  </sources>
                </mapping>
              </mappings>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker</id>
      <properties>
        <dockerImageName>georchestra/${project.artifactId}:${project.version}</dockerImageName>
        <dockerDatadirScmUrl>scm:git:https://github.com/georchestra/datadir.git</dockerDatadirScmUrl>
        <dockerDatadirScmVersion>docker-${packageDatadirScmVersion}</dockerDatadirScmVersion>
      </properties>
      <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-scm-plugin</artifactId>
            <version>1.11.2</version>
            <configuration>
              <checkoutDirectory>${project.build.directory}/datadir/</checkoutDirectory>
              <connectionUrl>${dockerDatadirScmUrl}</connectionUrl>
              <pushChanges>false</pushChanges>
              <scmVersion>${dockerDatadirScmVersion}</scmVersion>
              <scmVersionType>branch</scmVersionType>
            </configuration>
            <executions>
              <execution>
                <id>checkout-docker-default-datadir</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>checkout</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>1.2.2</version>
            <configuration>
              <imageName>${dockerImageName}</imageName>
              <dockerDirectory>${project.basedir}/src/docker</dockerDirectory>
              <resources>
                <resource>
                  <targetPath>/var/lib/jetty/webapps/${context.name}</targetPath>
                  <directory>${project.build.directory}/${context.name}</directory>
                </resource>
                <resource>
                  <targetPath>/etc/georchestra</targetPath>
                  <directory>${project.build.directory}/datadir</directory>
                  <include>${project.artifactId}/**</include>
                </resource>
              </resources>
              <serverId>docker-hub</serverId>
              <registryUrl>https://index.docker.io/v1/</registryUrl>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>28.2-jre</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>jdk11+</id>
      <activation>
        <jdk>[11,)</jdk>
      </activation>
      <properties>
        <java.version>11</java.version>
      </properties>
      <dependencies>
        <dependency>
          <groupId>javax.annotation</groupId>
          <artifactId>javax.annotation-api</artifactId>
        </dependency>
        <dependency>
          <groupId>javax.xml.bind</groupId>
          <artifactId>jaxb-api</artifactId>
          <version>2.3.1</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>it</id> <!-- Profile to enable integration tests with on the fly docker containers -->
      <properties>
        <skipIT>false</skipIT> <!-- re-enable integration tests -->
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <environmentVariables>
                <!-- expose these two environment variables for Spring to
                  resolve the connection URLs to ldap and psql as the mapped ports set up by
                  docker-maven-plugin bellow -->
                <pgsqlPort>${database_container.port}</pgsqlPort>
                <ldapPort>${ldap_container.port}</ldapPort>
              </environmentVariables>
            </configuration>
          </plugin>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>prepare-containers</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <images>
                    <image>
                      <name>georchestra/database</name>
                      <alias>database</alias>
                      <run>
                        <ports> <!-- expose the mapped port as the database_container.port maven property -->
                          <port>database_container.port:5432</port>
                        </ports>
                        <wait>
                          <healthy>true</healthy>
                          <log>(?s)database system is ready to accept connections</log>
                          <time>50000</time>
                        </wait>
                      </run>
                    </image>
                    <image>
                      <name>georchestra/ldap</name>
                      <alias>ldap</alias>
                      <run>
                        <ports> <!-- expose the mapped port as the ldap_container.port maven property -->
                          <port>ldap_container.port:389</port>
                        </ports>
                        <env>
                          <SLAPD_ORGANISATION>georchestra</SLAPD_ORGANISATION>
                          <SLAPD_DOMAIN>georchestra.org</SLAPD_DOMAIN>
                          <SLAPD_PASSWORD>secret</SLAPD_PASSWORD>
                        </env>
                        <wait>
                          <!-- Need to figure out a good way to make sure
                            the ldap service is ready before the tests are run. The healthy check seems
                            to be good enough but the tests still can't connect -->
                          <time>20000</time>
                          <!-- <healthy>true</healthy> -->
                          <tcp>
                            <mode>mapped</mode>
                            <ports>
                              <port>389</port>
                            </ports>
                          </tcp>
                        </wait>
                      </run>
                    </image>
                  </images>
                </configuration>
              </execution>
              <execution>
                <id>remove-containers</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <additionalparam>-Xdoclint:none</additionalparam>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.1.0</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.3</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <targetJdk>1.6</targetJdk>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.5.2</version>
      </plugin>
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <configuration>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
        <version>3.0.0</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>
  <organization>
    <name>geOrchestra</name>
    <url>http://www.georchestra.org</url>
  </organization>
</project>
