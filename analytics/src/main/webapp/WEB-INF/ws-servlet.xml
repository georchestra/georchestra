<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>

    <bean id="waitForDb" class="org.georchestra.commons.WaitForDb">
      <property name="url" value="jdbc:postgresql://${pgsqlHost}:${pgsqlPort}/${pgsqlDatabase}"/>
      <property name="username" value="${pgsqlUser}"/>
      <property name="password" value="${pgsqlPassword}"/>
      <property name="driverClassName" value="org.postgresql.Driver"/>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" depends-on="waitForDb">
        <!-- $pgsqlDatabase may contain special PG parameters such as "georchestra?sslmode=require" . see default|analytics.properties files-->
        <property name="jdbcUrl" value="jdbc:postgresql://${pgsqlHost}:${pgsqlPort}/${pgsqlDatabase}"/>
        <property name="user" value="${pgsqlUser}" />
        <property name="password" value="${pgsqlPassword}" />
        <property name="driverClass" value="org.postgresql.Driver"/>
        <property name="initialPoolSize" value="2"/>
        <property name="minPoolSize" value="${dataSource.minPoolSize:2}"/>
        <property name="maxPoolSize" value="${dataSource.maxPoolSize:2}"/>
        <property name="checkoutTimeout" value = "${dataSource.timeout:2000}"/>
        <property name="idleConnectionTestPeriod" value="30"/>
        <property name="maxIdleTime" value = "${dataSource.maxIdleTime:60}"/>
        <property name="acquireIncrement" value="2"/>
        <property name="testConnectionOnCheckout" value="true"/> <!-- Uses JDBC4's Connection.isValid() -->
    </bean>
 
    <bean id="homecontroller" class="org.georchestra.analytics.HomeController"/>

    <bean name="ogc_stats" class="org.georchestra.analytics.OGCStats">
        <constructor-arg ref="ogc_model" /> 
    </bean>

    <bean name="ogc_model" class="org.georchestra.analytics.model.OGCStatsModel" />

    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
        <property name="attributes">
            <map>
                <entry key="instanceName" value="${instanceName}"/>
                <entry key="defaultLanguage" value="${language}"/>
                <entry key="headerUrl" value="${headerUrl}"/>
                <entry key="headerHeight" value="${headerHeight}"/>
            </map>
        </property>
    </bean>

    <!-- Substitutes any ${...} variables in this (and loaded) spring configuration file
				with values from the properties file -->
    <context:property-placeholder location="
        file:${georchestra.datadir}/default.properties,
        file:${georchestra.datadir}/analytics/analytics.properties"
        ignore-resource-not-found="true" ignore-unresolvable="true" />

    <!-- Takes care of converting a comma-separated list into a Collection or an Array.
         Used in statisticsController bean with the excludedUsers property -->
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean" />

    <bean id="statisticsController" class="org.georchestra.analytics.StatisticsController">
        <constructor-arg name="localTimezone" value="${localTimezone:Europe/Paris}"/>
        <property name="excludedUsers" value="${excludedUsers:geoserver_privileged_user}"/>
    </bean>

    <bean id="georchestraConfiguration" class="org.georchestra.commons.configuration.GeorchestraConfiguration">
        <constructor-arg value="analytics" />
    </bean>

    <bean id="georCustomController" class="org.georchestra.analytics.GeorCustomController"/>

</beans>

