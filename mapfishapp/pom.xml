<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.georchestra</groupId>
    <artifactId>root</artifactId>
    <version>15.12-SNAPSHOT</version>
  </parent>
  <artifactId>mapfishapp</artifactId>
  <packaging>war</packaging>
  <name>Mapfishapp Webapp</name>
  <url>http://www.georchestra.org</url>
  <properties>
    <finalName>mapfishapp</finalName>
    <maven.test.skip>false</maven.test.skip>
    <spring.version>3.1.0.RELEASE</spring.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>org.tuckey</groupId>
      <artifactId>urlrewritefilter</artifactId>
      <version>3.0.4</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- Testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-mock</artifactId>
      <version>2.0.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.3.1</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.1.2</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.4</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>1.1.2</version>
    </dependency>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20080701</version>
    </dependency>
    <!-- print module -->
    <dependency>
      <groupId>org.mapfish.print</groupId>
      <artifactId>print-lib</artifactId>
      <version>2.1.1</version>
    </dependency>
    <!-- geotools -->
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-main</artifactId>
      <version>${gt.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-wfs</artifactId>
      <version>${gt.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-shapefile</artifactId>
      <version>${gt.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-mif</artifactId>
      <version>${gt.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-ogr-core</artifactId>
      <version>${gt.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-ogr-jni</artifactId>
      <version>${gt.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.gdal</groupId>
          <artifactId>gdal</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.geotools.xsd</groupId>
      <artifactId>gt-xsd-kml</artifactId>
      <version>${gt.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-geojson</artifactId>
      <version>${gt.version}</version>
    </dependency>
    <!-- geotools - handles ESPG -->
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-epsg-hsql</artifactId>
      <version>${gt.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>epsg-extension</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-imageio-ext-gdal</artifactId>
      <version>${gt.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>imageio-ext-gdal-bindings</artifactId>
          <groupId>it.geosolutions.imageio-ext</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.16</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>apache-log4j-extras</artifactId>
      <version>1.1</version>
      <type>jar</type>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>9.1-901.jdbc4</version>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>1.2.2</version>
    </dependency>
    <!-- geOrchestra commons -->
    <dependency>
      <groupId>org.georchestra</groupId>
      <artifactId>georchestra-commons</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>
  <build>
    <finalName>${finalName}</finalName>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>2.4</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.groovy.maven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>org.georchestra</groupId>
            <artifactId>config</artifactId>
            <version>${project.version}</version>
            <classifier>${server}</classifier>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>serverConfigCopy</id>
            <phase>generate-sources</phase>
            <configuration>
              <tasks>
                <!-- global configuration from profile (print/viewer/startup layers/...) -->
                <copy todir="${basedir}/src/main/webapp/" filtering="true" overwrite="true" verbose="true" failonerror="false">
                  <fileset dir="${basedir}/src/main/filtered-resources/"/>
                  <filterset begintoken="$${" endtoken="}" recurse="false">
                    <filtersfile file="${confdir}/${project.artifactId}/maven.filter"/>
                  </filterset>
                </copy>
                <copy todir="${basedir}/src/main/webapp/" overwrite="true" verbose="true" failonerror="false">
                  <fileset dir="${confdir}/${project.artifactId}">
                    <exclude name="**/maven.filter"/>
                  </fileset>
                </copy>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <warName>mapfishapp</warName>
          <packagingExcludes>**/ext/examples/**,**/ext/pkgs/**,**/docs/**,**/openlayers/examples/**,**/openlayers/tests/**,PostTreatment.groovy</packagingExcludes>
        </configuration>
      </plugin>
      <!-- needed for jetty:run maven target -->
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.2.11.v20150529</version>
        <configuration>
          <webApp><contextPath>/mapfishapp/</contextPath></webApp>
          <scanIntervalSeconds>5</scanIntervalSeconds>
          <scanTargets>
            <scanTarget>src/main/java</scanTarget>
            <scanTarget>src/main/resources</scanTarget>
          </scanTargets>
          <httpConnector>
            <port>8287</port>
          </httpConnector>
          <systemProperties>
            <systemProperty>
              <name>org.geotools.referencing.forceXY</name>
              <value>true</value>
            </systemProperty>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <version>1.0-beta-1</version>
        <configuration>
          <!-- <server> and <url> must be specified on the "mvn tomcat:redeploy" command line.  -->
          <path>/${project.build.finalName}</path>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <plugin>
        <!-- http://mojo.codehaus.org/exec-maven-plugin/ -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <phase>process-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <executable>jsbuild/${jsbuild.command}</executable>
          <skip>false</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.5.2</version>
        <executions>
          <execution>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <excludes>
          <exclude>**/*.example</exclude>
        </excludes>
      </resource>
    </resources>
  </build>
  <profiles>
    <profile>
      <id>georchestra</id>
      <activation>
        <property>
          <name>georchestra</name>
        </property>
      </activation>
      <properties>
        <maven.test.skip.exec>false</maven.test.skip.exec>
      </properties>
      <distributionManagement>
        <!-- use the following if you're not using a snapshot version. -->
        <repository>
          <id>repo</id>
          <name>Mapfish Repository</name>
          <url>file:///var/devel/repo/releases/mapfishapp</url>
        </repository>
        <!-- use the following if you ARE using a snapshot version. -->
        <snapshotRepository>
          <id>repo</id>
          <name>Mapfish snapshot Repository</name>
          <url>file:///var/devel/repo/snapshots/mapfishapp</url>
        </snapshotRepository>
        <site>
          <id>www.georchestra.org</id>
          <url>file:///var/devel/repo/georchestra/htdocs/</url>
        </site>
      </distributionManagement>
    </profile>
    <profile>
      <id>Windows</id>
      <activation>
        <os>
          <!-- name>Windows plateform</name -->
          <family>Windows</family>
        </os>
      </activation>
      <properties>
        <jsbuild.command>build.bat</jsbuild.command>
      </properties>
    </profile>
    <profile>
      <id>Unix</id>
      <activation>
        <os>
          <!-- name>Unix platform</name -->
          <family>unix</family>
        </os>
      </activation>
      <properties>
        <jsbuild.command>build.sh</jsbuild.command>
      </properties>
    </profile>
    <profile>
      <id>Macintosh</id>
      <activation>
        <os>
          <!-- name>Macintosh platform</name -->
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <jsbuild.command>build.sh</jsbuild.command>
      </properties>
    </profile>
    <profile>
      <id>debianPackage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.6</version>
            <configuration>
              <classifier>generic</classifier>
              <packagingExcludes>**/ext/src/**,**/ext/examples/**,**/ext/pkgs/**,**/docs/**,**/openlayers/examples/**,**/openlayers/tests/**,PostTreatment.groovy</packagingExcludes>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.3</version>
            <executions>
              <execution>
                <id>copy-deb-resources</id>
                <phase>process-resources</phase>
                <goals><goal>copy-resources</goal></goals>
                <configuration>
                  <overwrite>true</overwrite>
                  <outputDirectory>${basedir}/target/deb</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/deb/resources</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>fix-permissions</id>
                <phase>package</phase>
                <configuration>
                  <target>
                    <chmod perm="ugo+x">
                      <fileset dir="${basedir}/target/deb">
                        <include name="**/bin/**"/>
                        <include name="**/sbin/**"/>
                        <include name="DEBIAN/post*"/>
                        <include name="DEBIAN/pre*"/>
                      </fileset>
                    </chmod>
                  </target>
                </configuration>
                <goals><goal>run</goal></goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>net.sf.debian-maven</groupId>
            <artifactId>debian-maven-plugin</artifactId>
            <version>1.0.6</version>
            <configuration>
              <packageName>georchestra-mapfishapp</packageName>
              <packageDescription>geOrchestra Viewer</packageDescription>
              <projectOrganization>geOrchestra</projectOrganization>
              <maintainerName>PSC</maintainerName>
              <maintainerEmail>psc@georchestra.org</maintainerEmail>
              <excludeAllArtifacts>true</excludeAllArtifacts>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>rpmPackage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.6</version>
            <configuration>
              <classifier>generic</classifier>
              <packagingExcludes>**/ext/src/**,**/ext/examples/**,**/ext/pkgs/**,**/docs/**,**/openlayers/examples/**,**/openlayers/tests/**,PostTreatment.groovy</packagingExcludes>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>rpm-maven-plugin</artifactId>
            <version>2.1.3</version>
            <executions>
              <execution>
                <id>generate-rpm</id>
                <goals>
                  <goal>rpm</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <name>georchestra-${project.artifactId}</name>
              <sourceEncoding>UTF-8</sourceEncoding>
              <group>Applications/Internet</group>
              <keyname>${rpm.gpg.key}</keyname>
              <mappings>
                <mapping>
                  <directory>/usr/share/lib/georchestra-${project.artifactId}</directory>
                  <sources>
                    <source>
                      <location>${project.build.directory}</location>
                      <includes>
                        <include>${project.artifactId}-generic.war</include>
                      </includes>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>/</directory>
                  <sources>
                    <source>
                      <location>${basedir}/src/deb/resources</location>
                    </source>
                  </sources>
                </mapping>
              </mappings>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.3.8</version>
            <configuration>
              <imageName>georchestra/${project.artifactId}</imageName>
              <dockerDirectory>${project.basedir}/src/docker</dockerDirectory>
              <resources>
                <resource>
                  <targetPath>/var/lib/jetty/webapps</targetPath>
                  <directory>${project.build.directory}</directory>
                  <include>${project.artifactId}.war</include>
                </resource>
                <resource>
                  <targetPath>/etc/georchestra/${project.artifactId}</targetPath>
                  <directory>${project.basedir}/../docker/${datadir}/${project.artifactId}</directory>
                  </resource>
              </resources>
              <!-- This will require to set up the docker-hub credentials correctly
                   into your ~/.m2/settings.xml, see:
                   https://github.com/spotify/docker-maven-plugin#authenticating-with-private-registries
              -->
              <serverId>docker-hub</serverId>
              <registryUrl>https://index.docker.io/v1/</registryUrl>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>19.0</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
