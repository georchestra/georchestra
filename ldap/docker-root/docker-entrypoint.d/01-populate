#!/bin/bash

# test if already initialized
if [ ! -f /etc/ldap/slapd.d/initialized ]; then

    source /docker-entrypoint.d/utils/load_secrets.sh

    # start slapd in background
    echo -n "Starting slapd daemon in background..."
    slapd -u ${RUN_AS_UID} -g ${RUN_AS_GID} -h "ldapi:/// ldap://127.0.0.1/"
    echo "Started: OK"

    echo -n "Waiting for LDAP deamon to start..."
    while true; do
        sleep 1
        ldapsearch -x >/dev/null 2>&1
        if [ $? -eq 0 ]; then
            break
        fi
    done;
    echo "Waiting: OK"

    # Getting the LDAP domain...
    dc_string=""
    IFS="."; declare -a dc_parts=($SLAPD_DOMAIN); unset IFS
    for dc_part in "${dc_parts[@]}"; do
        if [ -z "$dc_string" ]
          then
            dc_string="dc=$dc_part"
          else
            dc_string="$dc_string,dc=$dc_part"
        fi
    done

    echo "Populating LDAP tree..."
    ldapadd -Y EXTERNAL -H ldapi:/// -f /georchestraSchema.ldif
    ldapadd -Y EXTERNAL -H ldapi:/// -f /memberof.ldif
    ldapadd -Y EXTERNAL -H ldapi:/// -f /lastbind.ldif
    if [ "$SLAPD_PASSWORD_MGT_POLICY" == 'rotation' ]; then
    	echo "Updating password management policy..."
    	ldapadd -D "cn=admin,${dc_string}" -w "$SLAPD_PASSWORD" -f /rotationpolicyoverlay.ldif
    	ldapadd -D "cn=admin,${dc_string}" -w "$SLAPD_PASSWORD" -f /pwd_no_expire.ldif
    fi
    if [ "$IGNORE_DATA" = 'true' ]; then
        echo "$0: ignoring /georchestra.ldif";
    else
        if [ -n "$GEOSERVER_PRIVILEGED_USER_PASSWORD" ]; then
            # Allow changing the geoserver master password.
            # Works on first run only
            echo "replacing geoserver master password"
            GEOSERVER_PRIVILEGED_USER_PASSWORD=`slappasswd -s "$GEOSERVER_PRIVILEGED_USER_PASSWORD"`
            GEOSERVER_PRIVILEGED_USER_PASSWORD=`echo $GEOSERVER_PRIVILEGED_USER_PASSWORD |base64 -`
            perl -p -i -e "s/e1NIQX1XMlY4d2UrOFdNanpma28rMUtZVDFZcWZFVDQ9/${GEOSERVER_PRIVILEGED_USER_PASSWORD}/" /georchestra.ldif
        fi

        perl -p -i -e "s/georchestra.org/${SLAPD_DOMAIN}/"        /georchestra.ldif
        perl -p -i -e "s/dc=georchestra,dc=org/${dc_string}/"     /georchestra.ldif
        ldapadd -D "cn=admin,${dc_string}" -w "$SLAPD_PASSWORD" -f /georchestra.ldif

        if [ "$SLAPD_PASSWORD_MGT_POLICY" == 'rotation' ]; then
            echo "Setting a pwd-no-expire management policy to internal users"
            ldapadd -D "cn=admin,${dc_string}" -w "$SLAPD_PASSWORD" -f /pwd_no_expire_users.ldif
        fi
    fi
    echo "Populating LDAP tree: OK"

    echo "Creating indexes..."
    ldapmodify -Y EXTERNAL -H ldapi:/// -f /indexes.ldif
    echo "Indexes: OK"

    pkill slapd

    # wait for ldap to stop
    echo -n "Waiting for LDAP to stop..."
    while true; do
        sleep 1
        pgrep slapd >/dev/null 2>&1
        if [ $? -ne 0 ]; then
            break
        fi
    done;
    echo "Waiting: OK"

    touch /etc/ldap/slapd.d/initialized
else
    echo "LDAP already initialized !"
fi
